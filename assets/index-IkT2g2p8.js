(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(a){if(a.ep)return;a.ep=!0;const i=t(a);fetch(a.href,i)}})();function W(y,e=800,t=550){const s=window.innerWidth-40,a=window.innerHeight-40,i=Math.min(1,s/e,a/t),o=e*i,n=t*i;y.style.width=o+"px",y.style.height=n+"px",y.width=e,y.height=t;const h=y.getContext("2d");if(!h)throw new Error("2D context unavailable");return h.imageSmoothingEnabled=!0,h.imageSmoothingQuality="high",y.dataset.scale=i,{ctx:h,width:e,height:t,displayWidth:o,displayHeight:n,scale:i}}class G{#a=new Set;constructor(e=window){e.addEventListener("keydown",t=>{["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"," "].includes(t.key)&&t.preventDefault(),this.#a.add(t.key)}),e.addEventListener("keyup",t=>this.#a.delete(t.key))}pressed(e){return this.#a.has(e)}}class D{constructor(e,t){this.position={x:e,y:t},this.velocity={x:0,y:0},this.size=20,this.health=100,this.maxHealth=100,this.alive=!0}update(e){this.position.x+=this.velocity.x*e,this.position.y+=this.velocity.y*e}takeDamage(e){this.health-=e,this.health<=0&&(this.health=0,this.alive=!1)}render(e){}checkCollision(e){const t=this.position.x-e.position.x,s=this.position.y-e.position.y;return Math.sqrt(t*t+s*s)<(this.size+e.size)/2}getBounds(){return{left:this.position.x-this.size/2,right:this.position.x+this.size/2,top:this.position.y-this.size/2,bottom:this.position.y+this.size/2}}}const p={player:{baseHealth:10,baseSpeed:100,baseDamage:1,baseFireRate:1,baseDodge:5,baseLuck:0,baseCritChance:5,baseCritDamage:150,baseRegeneration:.02,basePickupRange:50,size:20},enemy:{size:15},enemyTypes:{basic:{name:"Basic",color:"#FF0000",size:15,baseHealth:.8,healthPerWave:.05,baseSpeed:70,speedPerWave:3,baseDamage:.8,damagePerWave:.15,baseXpValue:10,xpPerWave:2,moneyDropChance:.3,moneyValue:3,behavior:"bouncer"},tracker:{name:"Tracker",color:"#FFA500",size:12,baseHealth:.7,healthPerWave:.3,baseSpeed:45,speedPerWave:1.5,baseDamage:.8,damagePerWave:.08,baseXpValue:5,xpPerWave:1,moneyDropChance:.2,moneyValue:5,behavior:"tracker"},tank:{name:"Tank",color:"#8B0000",size:30,baseHealth:40,healthPerWave:20,baseSpeed:35,speedPerWave:.8,baseDamage:4,damagePerWave:.3,baseXpValue:30,xpPerWave:5,moneyDropChance:.9,moneyValue:20,behavior:"tank",aggroRadius:150},shooter:{name:"Shooter",color:"#FFFF00",size:14,baseHealth:.7,healthPerWave:.5,baseSpeed:90,speedPerWave:2,baseDamage:.4,damagePerWave:.08,baseXpValue:15,xpPerWave:3,moneyDropChance:.4,moneyValue:8,behavior:"shooter",shootCooldown:1.5,projectileSpeed:150,projectileDamage:.2,projectileSize:4,projectileBounces:8},wave:{name:"Wave",color:"#FF8800",size:8,baseHealth:.3,healthPerWave:.25,baseSpeed:120,speedPerWave:3,baseDamage:.2,damagePerWave:.05,baseXpValue:3,xpPerWave:1,moneyDropChance:.1,moneyValue:20,behavior:"wave",waveAmplitude:90,waveFrequency:10,groupSize:{min:2,max:10},trail:!0,amplitudeVariation:{min:.9,max:1.1},frequencyVariation:{min:.9,max:1.1},trailSpacing:1.2},boss:{name:"Boss",color:"#AA00FF",size:50,baseHealth:100,healthPerWave:80,baseSpeed:25,speedPerWave:.3,baseDamage:5,damagePerWave:1,baseXpValue:100,xpPerWave:20,moneyDropChance:1,moneyValue:250,behavior:"boss",shootCooldown:.8,waveSpawnCooldown:3,projectileSpeed:120,projectileDamage:1,projectileSize:8,projectileBounces:20},zoomer:{name:"Zoomer",color:"#FFFF99",size:8,baseHealth:.8,healthPerWave:.4,baseSpeed:300,speedPerWave:5,baseDamage:1.5,damagePerWave:.2,baseXpValue:50,xpPerWave:10,moneyDropChance:1,moneyValue:13,behavior:"zoomer"}},waveEnemyDistribution:{1:{basic:.4,tracker:.6},2:{basic:.45,tracker:.55},3:{basic:.5,tracker:.45,zoomer:.05},4:{basic:.7,tracker:.2,zoomer:.1},5:{basic:.6,tracker:.3,zoomer:.08,tank:.02},6:{basic:.5,tracker:.3,tank:.03,zoomer:.07,wave:.1},7:{basic:.45,tracker:.3,tank:.04,shooter:.08,zoomer:.03,wave:.1},8:{basic:.4,tracker:.35,tank:.05,shooter:.1,zoomer:.05,wave:.05},9:{basic:.38,tracker:.35,tank:.05,shooter:.12,zoomer:.05,wave:.05},10:{basic:.35,tracker:.35,tank:.06,shooter:.15,zoomer:.05,wave:.03,boss:.01},11:{basic:.35,tracker:.35,tank:.05,shooter:.15,zoomer:.03,wave:.07},12:{basic:.33,tracker:.35,tank:.06,shooter:.16,zoomer:.03,wave:.07},13:{basic:.32,tracker:.34,tank:.06,shooter:.18,zoomer:.03,wave:.07},14:{basic:.3,tracker:.34,tank:.07,shooter:.19,zoomer:.03,wave:.07},15:{basic:.3,tracker:.33,tank:.07,shooter:.2,zoomer:.04,wave:.05,boss:.01},16:{basic:.3,tracker:.32,tank:.07,shooter:.21,zoomer:.03,wave:.07},17:{basic:.28,tracker:.32,tank:.08,shooter:.22,zoomer:.03,wave:.07},18:{basic:.28,tracker:.31,tank:.08,shooter:.23,zoomer:.03,wave:.07},19:{basic:.27,tracker:.31,tank:.08,shooter:.24,zoomer:.03,wave:.07},20:{basic:.25,tracker:.3,tank:.09,shooter:.22,zoomer:.05,wave:.07,boss:.02},21:{basic:.25,tracker:.32,tank:.08,shooter:.25,zoomer:.03,wave:.07},22:{basic:.25,tracker:.31,tank:.08,shooter:.26,zoomer:.03,wave:.07},23:{basic:.24,tracker:.31,tank:.09,shooter:.26,zoomer:.03,wave:.07},24:{basic:.24,tracker:.3,tank:.09,shooter:.27,zoomer:.03,wave:.07},25:{basic:.23,tracker:.3,tank:.09,shooter:.27,zoomer:.03,wave:.07,boss:.01},26:{basic:.23,tracker:.29,tank:.09,shooter:.28,zoomer:.04,wave:.07},27:{basic:.22,tracker:.29,tank:.1,shooter:.28,zoomer:.04,wave:.07},28:{basic:.22,tracker:.28,tank:.1,shooter:.29,zoomer:.04,wave:.07},29:{basic:.21,tracker:.28,tank:.1,shooter:.3,zoomer:.04,wave:.07},30:{basic:.2,tracker:.27,tank:.11,shooter:.28,zoomer:.04,wave:.07,boss:.03},default:{basic:.25,tracker:.3,tank:.08,shooter:.25,zoomer:.04,wave:.08}},spawning:{baseSpawnRate:.6,maxSpawnRate:20,spawnRateIncreasePerWave:.65,spawnAcceleration:.02,waveDuration:50},economy:{moneyDropValue:2},projectile:{baseSpeed:400,baseSize:4,bounceHouseMaxBounces:5},upgrades:{health:{baseCost:50,costScaling:2,value:1,maxValue:50},speed:{baseCost:50,costScaling:2,value:20,maxValue:300},damage:{baseCost:50,costScaling:2,value:.2,maxValue:20},fireRate:{baseCost:50,costScaling:2,value:.2,maxValue:10},dodge:{baseCost:50,costScaling:2,value:5,maxValue:60},luck:{baseCost:50,costScaling:2,value:1,maxValue:100},critChance:{baseCost:50,costScaling:2,value:5,maxValue:100},critDamage:{baseCost:50,costScaling:2,value:25,maxValue:1e3},regeneration:{baseCost:50,costScaling:2,value:.01,maxValue:.1}},weaponUpgrades:{upgradeCostMultiplier:.5,maxLevel:4,pistol:{damage:.25,fireRate:.15,special:"accuracy"},shotgun:{damage:.2,projectileCount:1,special:"spread"},smg:{fireRate:.25,damage:.15,special:"penetration"},rocketLauncher:{damage:.3,aoeRadius:15,special:"multiRocket"},laserBeam:{damage:.2,fireRate:.3,special:"width"},ricochet:{bounces:2,damage:.15,special:"homing"},waveGun:{projectileCount:1,waveAmplitude:10,special:"frequency"},burstRifle:{projectileCount:1,damage:.2,special:"precision"},orbitalCannon:{projectileCount:2,damage:.15,special:"spiral"},novaBurst:{projectileCount:2,damage:.1,special:"explosive"},chainLightning:{chainJumps:1,chainRange:20,special:"fork"},boomerang:{projectileCount:1,boomerangDistance:50,special:"speed"}},weapons:{pistol:{name:"Pistol",cost:25,fireRate:1,damageMultiplier:1,projectileCount:1,spread:0,description:"Reliable starting weapon. 1x damage, 1x fire rate.",unlocked:!0,upgradeDescription:"+25% damage, +15% fire rate, +5px auto-aim radius"},shotgun:{name:"Shotgun",cost:50,fireRate:.2,damageMultiplier:3,projectileCount:4,spread:Math.PI/4,piercing:!0,description:"Shoots 4 piercing projectiles. 3x damage, slow fire.",unlocked:!1,upgradeDescription:"+20% damage, +1 pellet per level, tighter spread"},smg:{name:"SMG",cost:120,fireRate:8,damageMultiplier:.25,projectileCount:1,spread:Math.PI/12,description:"Rapid fire, decent damage per shot. Affordable early game.",unlocked:!1,upgradeDescription:"+25% fire rate, +15% damage, piercing at level 3+"},rocketLauncher:{name:"Rocket Launcher",cost:500,fireRate:.19,damageMultiplier:15,projectileCount:1,spread:0,aoeRadius:100,description:"Massive damage in an area. Very slow fire rate.",unlocked:!1,upgradeDescription:"+30% damage, +15px blast radius, dual rockets at level 4"},laserBeam:{name:"Laser Beam",cost:300,fireRate:40,damageMultiplier:.1,projectileCount:1,spread:0,beam:!0,description:"Continuous beam that melts through enemies.",unlocked:!1,upgradeDescription:"+20% damage, +30% tick rate, wider beam"},ricochet:{name:"Ricochet Gun",cost:175,fireRate:2,damageMultiplier:1.2,projectileCount:1,spread:0,autoAim:!0,maxBounces:7,description:"Bullets bounce and seek enemies. Smart targeting.",unlocked:!1,upgradeDescription:"+2 bounces per level, +15% damage, improved homing"},waveGun:{name:"Wave Gun",cost:180,fireRate:1.5,damageMultiplier:2.25,projectileCount:3,spread:0,wavePattern:!0,piercing:!0,description:"Shoots 3 projectiles in expanding wave pattern.",unlocked:!1,upgradeDescription:"+1 wave at level 2/4, +10px amplitude, more oscillations"},burstRifle:{name:"Burst Rifle",cost:125,fireRate:1.2,damageMultiplier:3.5,projectileCount:3,burstDelay:.08,spread:Math.PI/24,description:"3-round burst with each trigger pull. Accurate.",unlocked:!1,upgradeDescription:"+1 round at level 2/4, +20% damage, tighter grouping"},orbitalCannon:{name:"Orbital Cannon",cost:400,fireRate:.5,damageMultiplier:8.5,projectileCount:8,spread:Math.PI*2,orbitalPattern:!0,description:"Fires a ring of projectiles outward. Area denial.",unlocked:!1,upgradeDescription:"+2 projectiles per level, +15% damage, spiral pattern at level 3+"},novaBurst:{name:"Nova Burst",cost:300,fireRate:1.2,damageMultiplier:1.5,projectileCount:10,spread:Math.PI*2,novaPattern:!0,novaAimBased:!0,piercing:!0,description:"Shoots 10 piercing projectiles around mouse direction.",unlocked:!1},chainLightning:{name:"Chain Lightning",cost:2e3,fireRate:1.8,damageMultiplier:2.4,projectileCount:1,spread:0,chainJumps:3,chainRange:60,chainDamageDecay:.75,description:"Ultimate weapon! Lightning devastates entire groups.",unlocked:!1,upgradeDescription:"+1 chain per level, +20px range, forks at level 4"},boomerang:{name:"Boomerang Launcher",cost:65,fireRate:.7,damageMultiplier:2.2,projectileCount:1,spread:0,boomerangReturn:!0,boomerangDistance:200,description:"Projectiles return after traveling 200px. Hits twice.",unlocked:!1,upgradeDescription:"+1 boomerang at level 2/4, +50px range, faster return"}},items:{bounceHouse:{name:"Bounce House",cost:500,description:"Projectiles bounce +1 time per stack",maxStacks:10,stackCostMultiplier:2,bouncesPerStack:1},vampiric:{name:"Vampiric Shots",cost:4e3,description:"Heal 0.1 HP per enemy killed",healPerKills:1,healAmount:.1,maxStacks:1},moneyMagnet:{name:"Money Magnet",cost:150,description:"Double pickup range",rangeMultiplier:2,maxStacks:1},luckyPenny:{name:"Lucky Penny",cost:200,description:"+10 Luck, +25% money from pickups",luckBonus:10,moneyMultiplier:1.25,maxStacks:1},speedBoots:{name:"Speed Boots",cost:163,description:"+30% movement speed",speedMultiplier:1.3,maxStacks:1},sharpShooter:{name:"Sharp Shooter",cost:350,description:"+20% crit chance, +50% crit damage",critChanceBonus:20,critDamageBonus:50,maxStacks:1},tankArmor:{name:"Tank Armor",cost:450,description:"+5 max health, +20% damage reduction",healthBonus:5,damageReduction:.2,maxStacks:1},rapidReload:{name:"Rapid Reload",cost:1e3,description:"+50% fire rate for all weapons",fireRateMultiplier:1.5,maxStacks:1},explosiveRounds:{name:"Explosive Rounds",cost:13e3,description:"All projectiles explode on impact (small AoE)",aoeRadius:30,aoeDamagePercent:.3,maxStacks:1},lifeSteal:{name:"Life Steal",cost:1e4,description:"Heal 5% of damage dealt",lifeStealPercent:.05,maxStacks:1},luckyCoin:{name:"Lucky Coin",cost:15,description:"+0.5 Luck",luckBonus:.5,maxStacks:10,upgradeDescription:"Permanent +0.5 luck per purchase"},energyDrink:{name:"Energy Drink",cost:18,description:"+3 Speed",speedBonus:3,maxStacks:10,upgradeDescription:"Permanent +3 speed per purchase"},proteinBar:{name:"Protein Bar",cost:20,description:"+0.2 Max Health",healthBonus:.2,maxStacks:10,upgradeDescription:"Permanent +0.2 health per purchase"},sharpTips:{name:"Sharp Tips",cost:22,description:"+2% Damage",damagePercent:.02,maxStacks:10,upgradeDescription:"Permanent +2% damage per purchase"},quickHands:{name:"Quick Hands",cost:50,description:"+3% Fire Rate",fireRatePercent:.03,maxStacks:10,upgradeDescription:"Permanent +3% fire rate per purchase"},bandaidPack:{name:"Bandaid Pack",cost:250,description:"+0.01 HP/s Regeneration",regenBonus:.001,maxStacks:10,upgradeDescription:"Stackable regeneration boost"},coffeeShot:{name:"Coffee Shot",cost:90,description:"+5% Speed & Fire Rate",speedPercent:.05,fireRatePercent:.05,maxStacks:10,upgradeDescription:"Small boost to mobility and DPS"},magnetGloves:{name:"Magnet Gloves",cost:100,description:"+20 Pickup Range",pickupRangeBonus:20,maxStacks:1},criticalEye:{name:"Critical Eye",cost:110,description:"+10% Crit Chance",critChanceBonus:10,maxStacks:1},heavyRounds:{name:"Heavy Rounds",cost:230,description:"+25% Damage, -10% Fire Rate",damageMultiplier:1.25,fireRateMultiplier:.9,maxStacks:1},shieldGenerator:{name:"Shield Generator",cost:280,description:"15% chance to block all damage",blockChance:15,maxStacks:1},adrenalineRush:{name:"Adrenaline Rush",cost:330,description:"+30% all stats when below 30% HP",triggerHealthPercent:.3,statBoostPercent:.3,maxStacks:1},doubleTap:{name:"Double Tap",cost:600,description:"20% chance to shoot twice",doubleShotChance:.2,maxStacks:1},bloodPact:{name:"Blood Pact",cost:8500,description:"Enemies have 30% chance to drop health",healthDropChance:.3,healthDropAmount:.5,maxStacks:1},glassCannon:{name:"Glass Cannon",cost:1500,description:"+100% Damage, -50% Max Health",damageMultiplier:2,healthMultiplier:.5,maxStacks:1}},ui:{canvasWidth:800,canvasHeight:550,gameAreaHeight:450,uiBarHeight:100,shopItemHeight:80},endWaveUpgrades:{optionsCount:4,rerollCost:25,upgradeTypes:[{type:"health",weight:10,value:.5,display:"+0.5 Health"},{type:"damage",weight:10,value:.1,display:"+0.1 Damage"},{type:"fireRate",weight:8,value:.1,display:"+10% Fire Rate"},{type:"speed",weight:8,value:10,display:"+10 Speed"},{type:"dodge",weight:6,value:2,display:"+2% Dodge"},{type:"luck",weight:6,value:2,display:"+2 Luck"},{type:"critChance",weight:5,value:2,display:"+2% Crit Chance"},{type:"critDamage",weight:5,value:10,display:"+10% Crit Damage"},{type:"regeneration",weight:4,value:.005,display:"+0.05 HP/s Regen"}]}};function X(y,e="basic"){const t=p.enemyTypes[e]||p.enemyTypes.basic;return{health:t.baseHealth+(y-1)*t.healthPerWave,speed:t.baseSpeed+(y-1)*t.speedPerWave,damage:t.baseDamage+(y-1)*t.damagePerWave,xpValue:t.baseXpValue+(y-1)*t.xpPerWave,moneyDropChance:t.moneyDropChance,moneyValue:t.moneyValue}}function j(y){return p.waveEnemyDistribution[y]||p.waveEnemyDistribution.default}function $(y){const e=j(y),t=Math.random();let s=0;for(const[a,i]of Object.entries(e))if(s+=i,t<=s)return a;return"basic"}function q(y,e){const t=p.spawning.baseSpawnRate+(y-1)*p.spawning.spawnRateIncreasePerWave,s=e*p.spawning.spawnAcceleration;return Math.min(t+s,p.spawning.maxSpawnRate)}const g={CANVAS_WIDTH:p.ui.canvasWidth,CANVAS_HEIGHT:p.ui.canvasHeight,GAME_AREA_HEIGHT:p.ui.gameAreaHeight,UI_BAR_HEIGHT:p.ui.uiBarHeight,PLAYER_SPEED:p.player.baseSpeed,PLAYER_SIZE:p.player.size,PLAYER_HEALTH:p.player.baseHealth,ENEMY_SIZE:p.enemy.size,PROJECTILE_SIZE:p.projectile.baseSize,PROJECTILE_SPEED:p.projectile.baseSpeed,MONEY_VALUE:p.economy.moneyDropValue},k={MENU:"MENU",PLAYING:"PLAYING",PAUSED:"PAUSED",ROUND_COMPLETE:"ROUND_COMPLETE",GAME_OVER:"GAME_OVER"},I={MOUSE:"MOUSE",KEYBOARD:"KEYBOARD"},c={BACKGROUND:"#000000",PLAYER:"#00FF00",UI_TEXT:"#00FF00",UI_INACTIVE:"#006600",GRID:"#001100",UI_BACKGROUND:"#0a0a0a",UI_BORDER:"#00FF00"};class K extends D{constructor(e,t){super(e,t),this.size=g.PLAYER_SIZE,this.speed=g.PLAYER_SPEED,this.health=g.PLAYER_HEALTH,this.maxHealth=g.PLAYER_HEALTH,this.aimAngle=0}update(e,t,s,a,i,o=0){if(this.velocity.x=0,this.velocity.y=0,(t.pressed("ArrowLeft")||t.pressed("a"))&&(this.velocity.x=-this.speed),(t.pressed("ArrowRight")||t.pressed("d"))&&(this.velocity.x=this.speed),(t.pressed("ArrowUp")||t.pressed("w"))&&(this.velocity.y=-this.speed),(t.pressed("ArrowDown")||t.pressed("s"))&&(this.velocity.y=this.speed),this.velocity.x!==0&&this.velocity.y!==0){const h=1/Math.sqrt(2);this.velocity.x*=h,this.velocity.y*=h}if(s){const h=s.x-this.position.x,d=s.y-this.position.y;this.aimAngle=Math.atan2(d,h)}super.update(e);const n=this.size/2;this.position.x=Math.max(n,Math.min(a-n,this.position.x)),this.position.y=Math.max(o+n,Math.min(i-n,this.position.y))}render(e){e.fillStyle=c.PLAYER,e.fillRect(this.position.x-this.size/2,this.position.y-this.size/2,this.size,this.size),e.strokeStyle=c.PLAYER,e.lineWidth=2,e.beginPath(),e.moveTo(this.position.x,this.position.y);const t=25;e.lineTo(this.position.x+Math.cos(this.aimAngle)*t,this.position.y+Math.sin(this.aimAngle)*t),e.stroke();const s=this.size*1.5,a=4,i=this.position.y-this.size/2-10;e.fillStyle="#333333",e.fillRect(this.position.x-s/2,i,s,a);const o=this.health/this.maxHealth;e.fillStyle=o>.3?c.PLAYER:"#FF0000",e.fillRect(this.position.x-s/2,i,s*o,a)}}class U extends D{constructor(e,t,s="money"){super(e,t),this.type=s,this.size=16,this.value=s==="money"?g.MONEY_VALUE:0,this.lifetime=10}update(e){this.lifetime-=e,this.lifetime<=0&&(this.alive=!1)}render(e){const t=Math.min(1,this.lifetime/2);e.save(),e.globalAlpha=t,this.type==="money"&&(e.font="14px monospace",e.fillStyle="#FFD700",e.textAlign="center",e.textBaseline="middle",e.shadowColor="#FFD700",e.shadowBlur=5,e.fillText(`$${Math.floor(this.value)}`,this.position.x,this.position.y)),e.restore()}}class M extends D{constructor(e,t,s,a="player"){super(e,t),this.size=g.PROJECTILE_SIZE,this.speed=g.PROJECTILE_SPEED,this.damage=25,this.owner=a,this.bounces=0,this.maxBounces=0,this.lifetime=5,this.color=null,this.explosive=!1,this.explosionRadius=0,this.explosionDamage=0,this.piercing=!1,this.hitEnemies=new Set,this.waveMotion=!1,this.wavePhase=0,this.waveAmplitude=0,this.initialAngle=s,this.distanceTraveled=0,this.smartBounce=!1,this.trail=!1,this.lastTrailPosition={x:e,y:t},this.chainLightning=!1,this.chainJumps=0,this.chainRange=0,this.chainDamageDecay=1,this.chainsRemaining=0,this.boomerang=!1,this.boomerangDistance=0,this.boomerangStartPos=null,this.boomerangReturning=!1,this.boomerangTravelDistance=0,this.gravityWell=!1,this.wellDuration=0,this.wellRadius=0,this.wellStrength=0,this.wellDamage=0,this.wellActive=!1,this.wellTimer=0,this.autoAimRadius=25,this.homing=!1,this.homingTarget=null,this.homingStrength=0,this.velocity.x=Math.cos(s)*this.speed,this.velocity.y=Math.sin(s)*this.speed}update(e,t,s,a=null){if(this.homing&&a&&this.alive){if(this.homingTarget&&(!this.homingTarget.alive||this.homingTarget.health<=0)&&(this.homingTarget=null),!this.homingTarget){let i=null,o=1/0;for(const n of a){if(!n.alive)continue;const h=n.position.x-this.position.x,d=n.position.y-this.position.y,r=Math.sqrt(h*h+d*d);r<o&&(o=r,i=n)}this.homingTarget=i}if(this.homingTarget){const i=this.homingTarget.position.x-this.position.x,o=this.homingTarget.position.y-this.position.y,n=Math.atan2(o,i),h=Math.atan2(this.velocity.y,this.velocity.x);let d=n-h;for(;d>Math.PI;)d-=Math.PI*2;for(;d<-Math.PI;)d+=Math.PI*2;const r=this.homingStrength*e,l=h+Math.min(Math.max(d,-r),r);this.velocity.x=Math.cos(l)*this.speed,this.velocity.y=Math.sin(l)*this.speed}}else if(this.owner==="player"&&!this.piercing&&!this.homing&&a&&this.alive){let i=null,o=this.autoAimRadius;for(const n of a){if(!n.alive)continue;const h=n.position.x-this.position.x,d=n.position.y-this.position.y,r=Math.sqrt(h*h+d*d);r<o&&(o=r,i=n)}if(i){const n=i.position.x-this.position.x,h=i.position.y-this.position.y,d=Math.atan2(h,n);this.velocity.x=Math.cos(d)*this.speed,this.velocity.y=Math.sin(d)*this.speed}}if(this.gravityWell&&this.owner==="player"&&(!this.wellActive&&this.lifetime<=0&&(this.wellActive=!0,this.wellTimer=this.wellDuration,this.velocity.x=0,this.velocity.y=0,this.lifetime=this.wellDuration),this.wellActive&&a))for(const i of a){if(!i.alive)continue;const o=this.position.x-i.position.x,n=this.position.y-i.position.y,h=Math.sqrt(o*o+n*n);if(h<=this.wellRadius&&h>0){const d=this.wellStrength/(h+1),r=o/h*d*e,l=n/h*d*e;i.velocity.x+=r,i.velocity.y+=l,this.wellDamage>0&&i.takeDamage(this.wellDamage*e)}}if(this.boomerang&&this.owner==="player"&&(this.boomerangTravelDistance+=this.speed*e,!this.boomerangReturning&&this.boomerangTravelDistance>=this.boomerangDistance&&(this.boomerangReturning=!0,this.hitEnemies.clear()),this.boomerangReturning&&this.boomerangStartPos)){const i=this.boomerangStartPos.x-this.position.x,o=this.boomerangStartPos.y-this.position.y;if(Math.sqrt(i*i+o*o)<20){this.alive=!1;return}const h=Math.atan2(o,i);this.velocity.x=Math.cos(h)*this.speed,this.velocity.y=Math.sin(h)*this.speed}if(this.waveMotion){this.distanceTraveled+=this.speed*e;const i=Math.sin(this.distanceTraveled*.07+this.wavePhase)*this.waveAmplitude,o=this.initialAngle+Math.PI/2;this.velocity.x=Math.cos(this.initialAngle)*this.speed+Math.cos(o)*i*2,this.velocity.y=Math.sin(this.initialAngle)*this.speed+Math.sin(o)*i*2}if(super.update(e),this.lifetime-=e,this.lifetime<=0){this.alive=!1;return}if(this.maxBounces>0&&this.bounces<this.maxBounces){const i=this.size/2;(this.position.x-i<=0||this.position.x+i>=t)&&(this.velocity.x=-this.velocity.x,this.position.x=Math.max(i,Math.min(t-i,this.position.x)),this.bounces++,this.waveMotion&&(this.initialAngle=Math.atan2(this.velocity.y,this.velocity.x))),(this.position.y-i<=0||this.position.y+i>=s)&&(this.velocity.y=-this.velocity.y,this.position.y=Math.max(i,Math.min(s-i,this.position.y)),this.bounces++,this.waveMotion&&(this.initialAngle=Math.atan2(this.velocity.y,this.velocity.x)))}else(this.position.x<-50||this.position.x>t+50||this.position.y<-50||this.position.y>s+50)&&(this.alive=!1)}render(e){this.color?e.fillStyle=this.color:e.fillStyle=this.owner==="player"?c.PLAYER:"#FF6600",this.size>=10?(e.save(),e.translate(this.position.x,this.position.y),e.rotate(Math.atan2(this.velocity.y,this.velocity.x)),e.fillRect(-this.size/2,-this.size/4,this.size,this.size/2),e.restore()):(e.beginPath(),e.arc(this.position.x,this.position.y,this.size/2,0,Math.PI*2),e.fill())}}class J{constructor(e,t){this.weapons=[],this.effectsSystem=e,this.soundSystem=t}addWeapon(e){e.effectsSystem=this.effectsSystem,e.soundSystem=this.soundSystem,this.weapons.push(e)}removeWeapon(e){this.weapons=this.weapons.filter(t=>t.id!==e)}update(e,t,s,a,i){for(const o of this.weapons)s.length>0&&(o.weaponDamageStats=i,o.update(e,t,s,a))}}class E{constructor(e,t,s=1){this.id=e,this.name=t.name,this.baseFireRate=t.fireRate,this.baseDamageMultiplier=t.damageMultiplier,this.baseProjectileCount=t.projectileCount||1,this.spread=t.spread||0,this.baseAoeRadius=t.aoeRadius||0,this.description=t.description,this.cost=t.cost,this.level=s;const a=p.weaponUpgrades[e]||{};if(this.damageMultiplier=this.baseDamageMultiplier+(a.damage||0)*(s-1),this.projectileCount=this.baseProjectileCount+Math.floor((a.projectileCount||0)*(s-1)),this.aoeRadius=this.baseAoeRadius+(a.aoeRadius||0)*(s-1),a.special)switch(a.special){case"accuracy":this.autoAimBonus=5*(s-1);break;case"spread":this.spread=this.spread*Math.pow(.85,s-1);break;case"penetration":s>=3&&(this.piercing=!0);break;case"multiRocket":s>=4&&(this.projectileCount=2);break;case"width":this.beamWidth=2+(s-1)*2;break;case"precision":this.spread=this.spread*Math.pow(.75,s-1);break;case"spiral":s>=3&&(this.spiralPattern=!0);break;case"explosive":s>=4&&(this.explosiveNova=!0);break;case"fork":s>=4&&(this.forkLightning=!0);break;case"speed":this.returnSpeedMultiplier=1+(s-1)*.3;break;case"damage":s>=3&&(this.wellDamage=.5);break}e==="ricochet"&&(this.maxBounces=(t.maxBounces||7)+(a.bounces||0)*(s-1)),e==="chainLightning"&&(this.chainJumps=(t.chainJumps||3)+(a.chainJumps||0)*(s-1),this.chainRange=(t.chainRange||80)+(a.chainRange||0)*(s-1)),e==="boomerang"&&(this.boomerangDistance=(t.boomerangDistance||200)+(a.boomerangDistance||0)*(s-1)),e==="waveGun"&&(this.waveAmplitude=100+(a.waveAmplitude||0)*(s-1)),e==="gravityWell"&&(this.wellDuration=(t.wellDuration||4)+(a.wellDuration||0)*(s-1),this.wellRadius=(t.wellRadius||120)+(a.wellRadius||0)*(s-1)),this.cooldown=0,this.effectsSystem=null,this.soundSystem=null}getFireRate(e){return this.baseFireRate*e.fireRate}getDamage(e){return Math.max(1,e.damage*this.damageMultiplier)}update(e,t,s,a){this.cooldown-=e;const i=this.getFireRate(t.stats||{fireRate:1});this.cooldown<=0&&s.length>0&&(this.fire(t,s,a),t.hasDoubleTap&&Math.random()<p.items.doubleTap.doubleShotChance&&setTimeout(()=>{s.length>0&&this.fire(t,s,a)},50),this.cooldown=1/i)}fire(e,t,s){}playShootSound(){this.soundSystem&&this.soundSystem.play("shoot")}addMuzzleFlash(e){this.effectsSystem&&this.effectsSystem.addMuzzleFlash(e.position.x,e.position.y,e.aimAngle)}}class F extends E{constructor(e=1){super("pistol",p.weapons.pistol,e)}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage}),i=new M(e.position.x,e.position.y,e.aimAngle,"player");if(i.damage=a,i.weaponId=this.id,this.autoAimBonus&&(i.autoAimRadius=25+this.autoAimBonus),e.hasBounceHouse){const o=p.items.bounceHouse.bouncesPerStack*(e.bounceHouseStacks||1);i.maxBounces=o}e.hasExplosiveRounds&&(i.explosive=!0,i.explosionRadius=p.items.explosiveRounds.aoeRadius,i.explosionDamage=a*p.items.explosiveRounds.aoeDamagePercent),s.push(i),this.addMuzzleFlash(e),this.effectsSystem&&this.effectsSystem.addShellCasing(e.position.x,e.position.y),this.soundSystem&&this.soundSystem.play("shootPistol")}}class Z extends E{constructor(e=1){super("shotgun",p.weapons.shotgun,e)}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage});for(let i=0;i<this.projectileCount;i++){const o=(i-(this.projectileCount-1)/2)*this.spread/(this.projectileCount-1),n=new M(e.position.x,e.position.y,e.aimAngle+o,"player");if(n.damage=a,n.weaponId=this.id,n.piercing=!0,n.speed=p.projectile.baseSpeed*(.8+Math.random()*.4),e.hasBounceHouse){const h=p.items.bounceHouse.bouncesPerStack*(e.bounceHouseStacks||1);n.maxBounces=Math.floor(h/2)}e.hasExplosiveRounds&&(n.explosive=!0,n.explosionRadius=p.items.explosiveRounds.aoeRadius*.5,n.explosionDamage=a*p.items.explosiveRounds.aoeDamagePercent),s.push(n)}if(this.addMuzzleFlash(e),this.effectsSystem){this.effectsSystem.addScreenShake(2.5,.15);for(let i=0;i<2;i++)this.effectsSystem.addShellCasing(e.position.x,e.position.y)}this.soundSystem&&this.soundSystem.play("shootShotgun")}}class Q extends E{constructor(e=1){super("smg",p.weapons.smg,e)}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage}),i=(Math.random()-.5)*this.spread,o=new M(e.position.x,e.position.y,e.aimAngle+i,"player");if(o.damage=a,o.weaponId=this.id,o.size=3,this.piercing&&(o.piercing=!0,o.hitEnemies=new Set),e.hasBounceHouse){const n=p.items.bounceHouse.bouncesPerStack*(e.bounceHouseStacks||1);o.maxBounces=n}e.hasExplosiveRounds&&(o.explosive=!0,o.explosionRadius=p.items.explosiveRounds.aoeRadius*.3,o.explosionDamage=a*p.items.explosiveRounds.aoeDamagePercent),s.push(o),Math.random()<.3&&(this.addMuzzleFlash(e),this.effectsSystem&&this.effectsSystem.addShellCasing(e.position.x,e.position.y)),this.soundSystem&&this.soundSystem.play("shootSMG")}}class ee extends E{constructor(e=1){super("rocketLauncher",p.weapons.rocketLauncher,e)}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage});let i=null,o=1/0;for(const n of t){if(!n.alive)continue;const h=n.position.x-e.position.x,d=n.position.y-e.position.y,r=Math.sqrt(h*h+d*d);r<o&&(o=r,i=n)}for(let n=0;n<this.projectileCount;n++){let h=e.aimAngle;if(i){const r=i.position.x-e.position.x,l=i.position.y-e.position.y;h=Math.atan2(l,r)}if(this.projectileCount>1){const r=(n-(this.projectileCount-1)/2)*.15;h+=r}const d=new M(e.position.x,e.position.y,h,"player");d.damage=a,d.weaponId=this.id,d.size=10,d.speed=p.projectile.baseSpeed*.7,d.color="#FF4500",d.explosive=!0,d.explosionRadius=this.aoeRadius,d.explosionDamage=a,d.trail=!0,d.homing=!0,d.homingTarget=i,d.homingStrength=4,d.maxBounces=0,s.push(d)}this.effectsSystem&&(this.effectsSystem.addScreenShake(4,.2),this.effectsSystem.addMuzzleFlash(e.position.x,e.position.y,e.aimAngle,"#FF4500")),this.soundSystem&&this.soundSystem.play("shootRocket")}}class te extends E{constructor(e=1){super("laserBeam",p.weapons.laserBeam,e),this.isBeaming=!1,this.beamTarget=null}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage}),i=new M(e.position.x,e.position.y,e.aimAngle,"player");i.damage=a,i.weaponId=this.id,i.speed=p.projectile.baseSpeed*3,i.size=2,i.color="#00FFFF",i.piercing=!0,i.lifetime=.5,s.push(i),this.soundSystem&&this.soundSystem.play("shootLaser")}}class se extends E{constructor(e=1){super("ricochet",p.weapons.ricochet,e)}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage}),i=new M(e.position.x,e.position.y,e.aimAngle,"player");i.damage=a,i.weaponId=this.id,i.maxBounces=7,i.color="#FF00FF",i.smartBounce=!0,s.push(i),this.addMuzzleFlash(e),this.soundSystem&&this.soundSystem.play("shootRicochet")}}class ie extends E{constructor(e=1){super("waveGun",p.weapons.waveGun,e)}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage}),i=Math.PI/8;for(let o=0;o<this.projectileCount;o++){const n=(o-(this.projectileCount-1)/2)*(i/(this.projectileCount-1)),h=new M(e.position.x,e.position.y,e.aimAngle+n,"player");if(h.damage=a,h.weaponId=this.id,h.piercing=!0,h.waveMotion=!0,h.wavePhase=o*(Math.PI*2/this.projectileCount),h.waveAmplitude=this.waveAmplitude||100,h.initialAngle=e.aimAngle+n,h.color="#00FF00",h.size=12,e.hasBounceHouse){const d=p.items.bounceHouse.bouncesPerStack*(e.bounceHouseStacks||1);h.maxBounces=d}e.hasExplosiveRounds&&(h.explosive=!0,h.explosionRadius=p.items.explosiveRounds.aoeRadius,h.explosionDamage=a*p.items.explosiveRounds.aoeDamagePercent),s.push(h)}this.soundSystem&&this.soundSystem.play("shootWave")}}class ae extends E{constructor(e=1){super("burstRifle",p.weapons.burstRifle,e),this.burstCount=0,this.burstTimer=0}update(e,t,s,a){this.cooldown-=e,this.burstTimer-=e;const i=this.getFireRate(t.stats||{fireRate:1});this.cooldown<=0&&s.length>0&&(this.burstCount=3,this.burstTimer=0,this.cooldown=1/i),this.burstCount>0&&this.burstTimer<=0&&(this.fireBurst(t,s,a),this.burstCount--,this.burstTimer=.08)}fireBurst(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage}),i=(Math.random()-.5)*this.spread,o=new M(e.position.x,e.position.y,e.aimAngle+i,"player");o.damage=a,o.weaponId=this.id,o.speed=p.projectile.baseSpeed*1.5,o.color="#FFFF00",s.push(o),this.soundSystem&&this.soundSystem.play("shootBurst")}fire(){}}class oe extends E{constructor(e=1){super("orbitalCannon",p.weapons.orbitalCannon,e)}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage});for(let i=0;i<8;i++){const o=Math.PI*2/8*i,n=new M(e.position.x,e.position.y,o,"player");n.damage=a,n.weaponId=this.id,n.speed=p.projectile.baseSpeed*.6,n.size=8,n.color="#FF1493",n.lifetime=2,e.hasBounceHouse&&(n.maxBounces=p.projectile.bounceHouseMaxBounces),s.push(n)}if(this.effectsSystem){this.effectsSystem.addScreenShake(2.5,.15);for(let i=0;i<8;i++){const o=Math.PI*2/8*i;this.effectsSystem.addMuzzleFlash(e.position.x,e.position.y,o,"#FF1493")}}this.soundSystem&&this.soundSystem.play("shootOrbital")}}class ne extends E{constructor(e=1){super("novaBurst",p.weapons.novaBurst,e)}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage});for(let i=0;i<10;i++){const o=Math.PI*2/10*i,n=e.aimAngle+o,h=new M(e.position.x,e.position.y,n,"player");h.damage=a,h.weaponId=this.id,h.speed=p.projectile.baseSpeed*.8,h.size=5,h.color="#00FFFF",h.piercing=!0,h.hitEnemies=new Set,e.hasBounceHouse&&(h.maxBounces=p.projectile.bounceHouseMaxBounces),e.hasExplosiveRounds&&(h.explosive=!0,h.explosionRadius=p.items.explosiveRounds.aoeRadius,h.explosionDamage=a*p.items.explosiveRounds.aoeDamagePercent),s.push(h)}if(this.effectsSystem){this.effectsSystem.addScreenShake(1.5,.1);for(let i=0;i<10;i++){const o=Math.PI*2/10*i;this.effectsSystem.addMuzzleFlash(e.position.x,e.position.y,o,"#00FFFF")}}this.soundSystem&&this.soundSystem.play("shootNova")}}class he extends E{constructor(e=1){super("chainLightning",p.weapons.chainLightning,e)}fire(e,t,s){if(t.length===0)return;const a=this.getDamage(e.stats||{damage:p.player.baseDamage});let i=null,o=1/0;const n=300;for(const u of t){if(!u.alive)continue;const v=u.position.x-e.position.x,f=u.position.y-e.position.y,S=Math.sqrt(v*v+f*f),b=Math.atan2(f,v),w=Math.abs(b-e.aimAngle),T=Math.min(w,Math.PI*2-w);S<o&&S<=n&&T<Math.PI/4&&(o=S,i=u)}if(!i)return;if(i.takeDamage(a),this.effectsSystem&&this.effectsSystem.addDamageNumber(i.position.x,i.position.y-10,a),this.weaponDamageStats){const u=this.weaponDamageStats.get(this.id)||0;this.weaponDamageStats.set(this.id,u+a)}const h=new Set([i]);let d=i,r=a,l=p.weapons.chainLightning.chainJumps;const m=[{x:e.position.x,y:e.position.y}];for(m.push({x:i.position.x,y:i.position.y});l>0;){let u=null,v=p.weapons.chainLightning.chainRange;for(const f of t){if(!f.alive||h.has(f))continue;const S=f.position.x-d.position.x,b=f.position.y-d.position.y,w=Math.sqrt(S*S+b*b);w<v&&(v=w,u=f)}if(!u)break;if(r*=p.weapons.chainLightning.chainDamageDecay,u.takeDamage(r),this.effectsSystem&&this.effectsSystem.addDamageNumber(u.position.x,u.position.y-10,r),this.weaponDamageStats){const f=this.weaponDamageStats.get(this.id)||0;this.weaponDamageStats.set(this.id,f+r)}h.add(u),m.push({x:u.position.x,y:u.position.y}),d=u,l--}if(this.effectsSystem)for(let u=0;u<m.length-1;u++)this.effectsSystem.addChainLightningEffect(m[u].x,m[u].y,m[u+1].x,m[u+1].y);this.soundSystem&&this.soundSystem.play("shootLightning")}}class le extends E{constructor(e=1){super("boomerang",p.weapons.boomerang,e)}fire(e,t,s){const a=this.getDamage(e.stats||{damage:p.player.baseDamage}),i=new M(e.position.x,e.position.y,e.aimAngle,"player");i.damage=a,i.weaponId=this.id,i.size=8,i.color="#00FF88",i.boomerang=!0,i.boomerangDistance=p.weapons.boomerang.boomerangDistance,i.boomerangStartPos={x:e.position.x,y:e.position.y},i.boomerangReturning=!1,i.boomerangTravelDistance=0,i.hitEnemies=new Set,s.push(i),this.addMuzzleFlash(e),this.soundSystem&&this.soundSystem.play("shootBoomerang")}}function re(y,e=1){if(!p.weapons[y])return new F(e);switch(y){case"pistol":return new F(e);case"shotgun":return new Z(e);case"smg":return new Q(e);case"rocketLauncher":return new ee(e);case"laserBeam":return new te(e);case"ricochet":return new se(e);case"waveGun":return new ie(e);case"burstRifle":return new ae(e);case"orbitalCannon":return new oe(e);case"novaBurst":return new ne(e);case"chainLightning":return new he(e);case"boomerang":return new le(e);default:return new F(e)}}class C extends D{constructor(e,t,s="basic",a=1){super(e,t),this.type=s,this.wave=a;const i=p.enemyTypes[s]||p.enemyTypes.basic;this.typeConfig=i,this.color=i.color,this.size=i.size,this.hitboxSize=i.size*1.1;const o=X(a,s);this.health=o.health,this.maxHealth=o.health,this.speed=o.speed,this.damage=o.damage,this.xpValue=o.xpValue,this.moneyDropChance=o.moneyDropChance,this.moneyValue=o.moneyValue,this.behavior=i.behavior,this.bounceOffWalls=!1,s==="tank"?(this.aggroRadius=i.aggroRadius,this.isAggro=!1,this.randomDirection={x:0,y:0},this.directionChangeTimer=0):s==="shooter"?(this.shootCooldown=i.shootCooldown,this.shootTimer=0,this.projectileSpeed=i.projectileSpeed,this.projectileDamage=i.projectileDamage,this.projectileSize=i.projectileSize,this.projectileBounces=i.projectileBounces):s==="wave"?(this.waveAmplitude=i.waveAmplitude,this.waveFrequency=i.waveFrequency,this.initialX=e,this.wavePhase=Math.random()*Math.PI*2):s==="boss"&&(this.shootCooldown=i.shootCooldown,this.shootTimer=0,this.waveSpawnCooldown=i.waveSpawnCooldown,this.waveSpawnTimer=0,this.projectileSpeed=i.projectileSpeed,this.projectileDamage=i.projectileDamage,this.projectileSize=i.projectileSize,this.projectileBounces=i.projectileBounces)}static spawnFromEdge(e,t,s=0,a=1,i="basic"){const o=Math.floor(Math.random()*4);let n,h;const d=t-s;switch(o){case 0:n=Math.random()*e,h=s-30;break;case 1:n=e+20,h=s+Math.random()*d;break;case 2:n=Math.random()*e,h=t+20;break;case 3:n=-20,h=s+Math.random()*d;break}const r=new C(n,h,i,a);if(i==="tracker")r.velocity.x=0,r.velocity.y=0;else if(i==="tank"){const l=Math.random()*Math.PI*2;r.velocity.x=Math.cos(l)*r.speed,r.velocity.y=Math.sin(l)*r.speed,r.randomDirection={x:r.velocity.x,y:r.velocity.y},r.bounceOffWalls=!0}else if(i==="shooter"){const l=Math.random()*e,m=s+Math.random()*d,u=l-n,v=m-h,f=Math.sqrt(u*u+v*v);r.velocity.x=u/f*r.speed,r.velocity.y=v/f*r.speed,r.bounceOffWalls=!0}else if(i==="wave"){o===0||o===2?n=e*(.2+Math.random()*.6):h=s+d*(.2+Math.random()*.6),r.position.x=n,r.position.y=h;let u,v;const f=e/2,S=s+d/2;switch(o){case 0:u=f+(Math.random()-.5)*e*.4,v=S+d*.3;break;case 1:u=f-e*.2,v=S+(Math.random()-.5)*d*.4;break;case 2:u=f+(Math.random()-.5)*e*.4,v=S-d*.3;break;case 3:u=f+e*.2,v=S+(Math.random()-.5)*d*.4;break}const b=u-n,w=v-h,T=Math.sqrt(b*b+w*w);r.velocity.x=b/T*r.speed,r.velocity.y=w/T*r.speed,r.initialX=n,r.bounceOffWalls=!1}else if(i==="boss"){const l=e/2,m=s+d/2,u=l-n,v=m-h,f=Math.sqrt(u*u+v*v);r.velocity.x=u/f*r.speed,r.velocity.y=v/f*r.speed,r.bounceOffWalls=!0}else if(i==="zoomer"){o===0||o===2?n=e*(.3+Math.random()*.4):h=s+d*(.3+Math.random()*.4),r.position.x=n,r.position.y=h;let u,v;switch(o){case 0:u=n+(Math.random()-.5)*e*.3,v=t+50;break;case 1:u=-50,v=h+(Math.random()-.5)*d*.3;break;case 2:u=n+(Math.random()-.5)*e*.3,v=s-50;break;case 3:u=e+50,v=h+(Math.random()-.5)*d*.3;break}const f=u-n,S=v-h,b=Math.sqrt(f*f+S*S);r.velocity.x=f/b*r.speed,r.velocity.y=S/b*r.speed,r.bounceOffWalls=!1}else{const l=Math.random()*e,m=s+Math.random()*d,u=l-n,v=m-h,f=Math.sqrt(u*u+v*v);r.velocity.x=u/f*r.speed,r.velocity.y=v/f*r.speed,r.bounceOffWalls=!0}return r}static spawnInside(e,t,s=0,a=1,i="tracker"){const n=30+Math.random()*(e-60),h=s+30+Math.random()*(t-s-60);return new C(n,h,i,a)}checkCollision(e){const t=this.position.x-e.position.x,s=this.position.y-e.position.y;return Math.sqrt(t*t+s*s)<(this.hitboxSize+e.size)/2}update(e,t,s,a=null,i=null,o=null){switch(this.behavior){case"tracker":this.updateTracker(e,a);break;case"tank":this.updateTank(e,t,s,a);break;case"shooter":this.updateShooter(e,t,s,a,i);break;case"wave":this.updateWave(e,t,s);break;case"boss":this.updateBoss(e,t,s,a,i,o);break;case"zoomer":this.updateZoomer(e,t,s);break;case"bouncer":default:this.updateBouncer(e,t,s);break}super.update(e)}updateTracker(e,t){if(!t||!t.alive)return;const s=t.position.x-this.position.x,a=t.position.y-this.position.y,i=Math.sqrt(s*s+a*a);i>0&&(this.velocity.x=s/i*this.speed,this.velocity.y=a/i*this.speed)}updateTank(e,t,s,a){if(!a||!a.alive)this.isAggro=!1;else{const i=a.position.x-this.position.x,o=a.position.y-this.position.y,n=Math.sqrt(i*i+o*o);n<=this.aggroRadius?(this.isAggro=!0,this.velocity.x=i/n*this.speed*1.5,this.velocity.y=o/n*this.speed*1.5):this.isAggro=!1}if(!this.isAggro){if(this.directionChangeTimer-=e,this.directionChangeTimer<=0){this.directionChangeTimer=1+Math.random()*2;const i=Math.random()*Math.PI*2;this.randomDirection.x=Math.cos(i)*this.speed,this.randomDirection.y=Math.sin(i)*this.speed}this.velocity.x=this.randomDirection.x,this.velocity.y=this.randomDirection.y}this.handleWallBounce(t,s)}updateShooter(e,t,s,a,i){if(this.handleWallBounce(t,s),a&&a.alive&&i&&(this.shootTimer-=e,this.shootTimer<=0)){this.shootTimer=this.shootCooldown;const o=a.position.x-this.position.x,n=a.position.y-this.position.y,h=Math.atan2(n,o),d=new M(this.position.x,this.position.y,h,"enemy");d.damage=this.projectileDamage,d.size=this.projectileSize,d.speed=this.projectileSpeed,d.maxBounces=this.projectileBounces,d.color=this.color,d.velocity.x=Math.cos(h)*this.projectileSpeed,d.velocity.y=Math.sin(h)*this.projectileSpeed,i.push(d)}}updateBouncer(e,t,s){this.handleWallBounce(t,s)}updateWave(e,t,s){const a=this.position.x,i=this.position.y,o=Math.abs(this.position.x-this.initialX),n=Math.sin(o/t*this.waveFrequency*Math.PI*2+this.wavePhase)*this.waveAmplitude;if(this.position.y+=n*e,this.trail&&this.effectsSystem){const h=this.position.x-a,d=this.position.y-i,r=Math.sqrt(h*h+d*d);this.lastTrailDistance||(this.lastTrailDistance=0),this.lastTrailDistance+=r,this.lastTrailDistance>(this.trailSpacing||1.2)&&(this.effectsSystem.addWaveTrail(a,i,this.color),this.lastTrailDistance=0)}(this.position.x<-50||this.position.x>t+50||this.position.y<-50||this.position.y>s+50)&&(this.alive=!1)}updateZoomer(e,t,s){(this.position.x<-50||this.position.x>t+50||this.position.y<-50||this.position.y>s+50)&&(this.alive=!1)}updateBoss(e,t,s,a,i,o){if(this.handleWallBounce(t,s),!(!a||!a.alive)){if(i&&(this.shootTimer-=e,this.shootTimer<=0)){this.shootTimer=this.shootCooldown;const n=a.position.x-this.position.x,h=a.position.y-this.position.y,d=Math.atan2(h,n),r=new M(this.position.x,this.position.y,d,"enemy");r.damage=this.projectileDamage,r.size=this.projectileSize,r.speed=this.projectileSpeed,r.maxBounces=this.projectileBounces,r.color="#FF00FF",r.velocity.x=Math.cos(d)*this.projectileSpeed,r.velocity.y=Math.sin(d)*this.projectileSpeed,i.push(r)}if(o&&(this.waveSpawnTimer-=e,this.waveSpawnTimer<=0)){this.waveSpawnTimer=this.waveSpawnCooldown;for(let n=0;n<3;n++){const h=Math.PI*2/3*n+Math.random()*.5,d=this.size+20,r=new C(this.position.x+Math.cos(h)*d,this.position.y+Math.sin(h)*d,"wave",this.wave);r.velocity.x=Math.cos(h)*r.speed,r.velocity.y=Math.sin(h)*r.speed*.3,r.initialX=r.position.x,o.push(r)}}}}handleWallBounce(e,t){if(!this.bounceOffWalls)return;const s=this.size/2,a=p.ui.uiBarHeight;this.position.x>-s&&this.position.x<e+s&&this.position.y>a-s&&this.position.y<t+s&&((this.position.x-s<=0||this.position.x+s>=e)&&(this.velocity.x=-this.velocity.x,this.position.x=Math.max(s,Math.min(e-s,this.position.x)),this.behavior==="tank"&&!this.isAggro&&(this.randomDirection.x=this.velocity.x)),(this.position.y-s<=a||this.position.y+s>=t)&&(this.velocity.y=-this.velocity.y,this.position.y=Math.max(a+s,Math.min(t-s,this.position.y)),this.behavior==="tank"&&!this.isAggro&&(this.randomDirection.y=this.velocity.y)))}render(e){if(e.save(),e.translate(this.position.x,this.position.y),this.behavior==="wave"){e.beginPath(),e.moveTo(0,-this.size/2),e.lineTo(-this.size/2,this.size/2),e.lineTo(this.size/2,this.size/2),e.closePath();const t=e.createLinearGradient(-this.size/2,0,this.size/2,0);t.addColorStop(0,"#FFA500"),t.addColorStop(.5,"#FFA500"),t.addColorStop(.5,"#FFFF00"),t.addColorStop(1,"#FFFF00"),e.fillStyle=t,e.fill()}else if(this.behavior==="boss"){e.fillStyle=this.color,e.strokeStyle="#FF00FF",e.lineWidth=3;const t=6;e.beginPath();for(let s=0;s<t;s++){const a=s*2*Math.PI/t-Math.PI/2,i=Math.cos(a)*this.size,o=Math.sin(a)*this.size;s===0?e.moveTo(i,o):e.lineTo(i,o)}e.closePath(),e.fill(),e.stroke(),e.beginPath(),e.arc(0,0,this.size*.3,0,Math.PI*2),e.fillStyle="#FF00FF",e.fill()}else if(this.behavior==="tank"){e.fillStyle=this.color,e.beginPath();const t=5;for(let s=0;s<t;s++){const a=s*2*Math.PI/t-Math.PI/2,i=Math.cos(a)*this.size,o=Math.sin(a)*this.size;s===0?e.moveTo(i,o):e.lineTo(i,o)}e.closePath(),e.fill(),this.isAggro&&(e.strokeStyle="#FF0000",e.lineWidth=2,e.beginPath(),e.arc(0,0,this.size+5,0,Math.PI*2),e.stroke())}else if(this.behavior==="zoomer"){e.rotate(Math.atan2(this.velocity.y,this.velocity.x)+Math.PI/2),e.fillStyle=this.color,e.beginPath(),e.moveTo(0,-this.size*1.5),e.lineTo(-this.size*.3,this.size),e.lineTo(this.size*.3,this.size),e.closePath(),e.fill(),e.strokeStyle=this.color,e.globalAlpha=.3,e.lineWidth=1;for(let t=0;t<3;t++)e.beginPath(),e.moveTo(-this.size*.5-t*3,this.size),e.lineTo(-this.size*.5-t*3,this.size+10),e.stroke(),e.beginPath(),e.moveTo(this.size*.5+t*3,this.size),e.lineTo(this.size*.5+t*3,this.size+10),e.stroke();e.globalAlpha=1}else e.fillStyle=this.color,e.beginPath(),e.moveTo(0,-this.size/2),e.lineTo(-this.size/2,this.size/2),e.lineTo(this.size/2,this.size/2),e.closePath(),e.fill();e.restore()}}class ce{constructor(e=1,t=null){this.level=e,this.timeSinceLastSpawn=0,this.totalTime=0,this.spawnTimer=0,this.effectsSystem=t}update(e,t,s,a,i=null,o=null){this.totalTime+=e,this.timeSinceLastSpawn+=e,this.spawnTimer+=e;const h=1/q(this.level,this.totalTime);this.timeSinceLastSpawn>=h&&(this.spawnEnemy(t,s,a,i,o),this.timeSinceLastSpawn=0)}spawnEnemy(e,t,s,a,i){const o=$(this.level);if(o==="wave"){const h=Math.floor(Math.random()*9)+2,d=Math.floor(Math.random()*4);for(let r=0;r<h;r++){const l=C.spawnFromEdge(t,s,g.UI_BAR_HEIGHT,this.level,"wave");d===0||d===2?l.position.x+=(r-h/2)*20:l.position.y+=(r-h/2)*20;const m=p.enemyTypes.wave;l.wavePhase=Math.random()*Math.PI*2;const u=m.amplitudeVariation.max-m.amplitudeVariation.min,v=m.frequencyVariation.max-m.frequencyVariation.min;l.waveAmplitude=l.waveAmplitude*(m.amplitudeVariation.min+Math.random()*u),l.waveFrequency=l.waveFrequency*(m.frequencyVariation.min+Math.random()*v),l.trail=!0,l.effectsSystem=this.effectsSystem,l.lastTrailDistance=0,l.trailSpacing=m.trailSpacing,e.push(l)}return}let n;o==="tracker"?n=C.spawnInside(t,s,g.UI_BAR_HEIGHT,this.level,o):n=C.spawnFromEdge(t,s,g.UI_BAR_HEIGHT,this.level,o),(n.behavior==="tracker"||n.behavior==="tank"||n.behavior==="shooter"||n.behavior==="boss")&&(n.player=a),e.push(n)}reset(){this.timeSinceLastSpawn=0,this.totalTime=0}}class de{constructor(){this.currentState=k.MENU,this.playerData=this.loadPlayerData(),this.currentLevel=1,this.roundTimer=0}loadPlayerData(){const e=localStorage.getItem("roguelikeGameData");if(e){const t=JSON.parse(e);if(!t.weaponLevels&&(t.weaponLevels={},t.weapons))for(const s of t.weapons)t.weaponLevels[s]=1;return t}return{unlockedLevels:1,money:0,stats:{health:p.player.baseHealth,speed:p.player.baseSpeed,damage:p.player.baseDamage,fireRate:p.player.baseFireRate,dodge:p.player.baseDodge,luck:p.player.baseLuck,critChance:p.player.baseCritChance,critDamage:p.player.baseCritDamage,pickupRange:p.player.basePickupRange,regeneration:p.player.baseRegeneration},upgradePurchases:{health:0,speed:0,damage:0,fireRate:0,dodge:0,luck:0,critChance:0,critDamage:0,regeneration:0},weapons:["pistol"],weaponLevels:{pistol:1},items:[],controlScheme:"MOUSE"}}savePlayerData(){localStorage.setItem("roguelikeGameData",JSON.stringify(this.playerData))}resetProgress(){this.playerData={unlockedLevels:1,money:0,stats:{health:p.player.baseHealth,speed:p.player.baseSpeed,damage:p.player.baseDamage,fireRate:p.player.baseFireRate,dodge:p.player.baseDodge,luck:p.player.baseLuck,critChance:p.player.baseCritChance,critDamage:p.player.baseCritDamage,pickupRange:p.player.basePickupRange,regeneration:p.player.baseRegeneration},upgradePurchases:{health:0,speed:0,damage:0,fireRate:0,dodge:0,luck:0,critChance:0,critDamage:0,regeneration:0},weapons:["pistol"],weaponLevels:{pistol:1},items:[],controlScheme:this.playerData.controlScheme},this.savePlayerData()}completeLevel(e,t){this.playerData.money+=t,e>=this.playerData.unlockedLevels&&e<30&&(this.playerData.unlockedLevels=e+1),this.savePlayerData()}setState(e){this.currentState=e}getState(){return this.currentState}}class pe{constructor(e,t){this.canvas=e,this.gameState=t,this.hoveredLevel=null,this.selectedOption=null,this.gridCols=10,this.gridRows=3,this.levelBoxSize=60,this.levelBoxSpacing=10,this.setupEventListeners()}setupEventListeners(){this.handleMouseMove=e=>this.onMouseMove(e),this.handleClick=e=>this.onClick(e)}activate(){this.canvas.addEventListener("mousemove",this.handleMouseMove),this.canvas.addEventListener("click",this.handleClick)}deactivate(){this.canvas.removeEventListener("mousemove",this.handleMouseMove),this.canvas.removeEventListener("click",this.handleClick)}getLayout(){const t=this.canvas.height*.11,s=t+30,a=this.canvas.height*.22,i=this.canvas.height*.73,o=40,n=150,h=this.canvas.height*.85;return{padding:20,titleY:t,subtitleY:s,gridStartY:a,buttonAreaY:i,buttonHeight:o,buttonWidth:n,statsAreaY:h,gridStartX:(this.canvas.width-(this.gridCols*(this.levelBoxSize+this.levelBoxSpacing)-this.levelBoxSpacing))/2}}getMousePosition(e){const t=this.canvas.getBoundingClientRect(),s=parseFloat(this.canvas.dataset.scale||1);return{x:(e.clientX-t.left)/s,y:(e.clientY-t.top)/s}}detectHover(e,t){const s=this.getLayout();for(let i=0;i<this.gridRows;i++)for(let o=0;o<this.gridCols;o++){const n=i*this.gridCols+o+1;if(n>30)break;const h=s.gridStartX+o*(this.levelBoxSize+this.levelBoxSpacing),d=s.gridStartY+i*(this.levelBoxSize+this.levelBoxSpacing);if(e>=h&&e<=h+this.levelBoxSize&&t>=d&&t<=d+this.levelBoxSize)return{type:"level",value:n}}const a=this.canvas.width/2-s.buttonWidth/2;return e>=s.padding&&e<=s.padding+s.buttonWidth&&t>=s.buttonAreaY&&t<=s.buttonAreaY+s.buttonHeight?{type:"button",value:"upgrades"}:e>=a&&e<=a+s.buttonWidth&&t>=s.buttonAreaY&&t<=s.buttonAreaY+s.buttonHeight?{type:"button",value:"shop"}:e>=this.canvas.width-s.padding-s.buttonWidth&&e<=this.canvas.width-s.padding&&t>=s.buttonAreaY&&t<=s.buttonAreaY+s.buttonHeight?{type:"button",value:"settings"}:null}onMouseMove(e){const t=this.getMousePosition(e),s=this.detectHover(t.x,t.y);this.hoveredLevel=null,this.selectedOption=null,s&&(s.type==="level"?this.hoveredLevel=s.value:s.type==="button"&&(this.selectedOption=s.value))}onClick(e){const t=this.getMousePosition(e),s=this.detectHover(t.x,t.y);s&&(s.type==="level"&&s.value===this.gameState.playerData.unlockedLevels?this.onLevelSelect(s.value):s.type==="button"&&(s.value==="upgrades"?this.onCharacterClick():s.value==="shop"?this.onShopClick():s.value==="settings"&&this.onSettingsClick()))}onLevelSelect(e){}onCharacterClick(){}onShopClick(){}onSettingsClick(){}render(e){const t=this.getLayout();e.fillStyle=c.BACKGROUND,e.fillRect(0,0,this.canvas.width,this.canvas.height),e.fillStyle=c.UI_TEXT,e.font="bold 48px monospace",e.textAlign="center",e.fillText("SQUARETATO",this.canvas.width/2,t.titleY),e.font="16px monospace",e.fillText("SELECT LEVEL",this.canvas.width/2,t.subtitleY);for(let a=0;a<this.gridRows;a++)for(let i=0;i<this.gridCols;i++){const o=a*this.gridCols+i+1;if(o>30)break;const n=t.gridStartX+i*(this.levelBoxSize+this.levelBoxSpacing),h=t.gridStartY+a*(this.levelBoxSize+this.levelBoxSpacing),d=o===this.gameState.playerData.unlockedLevels,r=o<this.gameState.playerData.unlockedLevels;o>this.gameState.playerData.unlockedLevels;const l=o===this.hoveredLevel;if(d?(e.fillStyle=l?c.UI_TEXT:"#00FF00",e.strokeStyle="#00FF00"):r?(e.fillStyle="#003300",e.strokeStyle="#004400"):(e.fillStyle="#001100",e.strokeStyle="#002200"),e.lineWidth=l&&d?3:2,e.strokeRect(n,h,this.levelBoxSize,this.levelBoxSize),d&&(e.fillStyle=l?"rgba(0, 255, 0, 0.2)":"rgba(0, 255, 0, 0.1)",e.fillRect(n,h,this.levelBoxSize,this.levelBoxSize)),e.font="bold 20px monospace",e.textAlign="center",e.textBaseline="middle",d?e.fillStyle="#000000":r?e.fillStyle="#005500":e.fillStyle="#003300",e.fillText(o.toString(),n+this.levelBoxSize/2,h+this.levelBoxSize/2),r){e.strokeStyle="#00AA00",e.lineWidth=3,e.beginPath();const m=n+this.levelBoxSize-15,u=h+10;e.moveTo(m,u+4),e.lineTo(m+4,u+8),e.lineTo(m+10,u),e.stroke()}else if(d){const m=Math.sin(Date.now()*.003)*.5+.5;e.strokeStyle=`rgba(0, 255, 0, ${.5+m*.5})`,e.lineWidth=2,e.strokeRect(n-2,h-2,this.levelBoxSize+4,this.levelBoxSize+4),e.font="10px monospace",e.fillStyle="#00FF00",e.fillText("PLAY",n+this.levelBoxSize/2,h+this.levelBoxSize-8)}}e.strokeStyle=this.selectedOption==="upgrades"?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(t.padding,t.buttonAreaY,t.buttonWidth,t.buttonHeight),e.fillStyle=this.selectedOption==="upgrades"?c.UI_TEXT:c.UI_INACTIVE,e.font="16px monospace",e.textAlign="center",e.fillText("UPGRADES",t.padding+t.buttonWidth/2,t.buttonAreaY+t.buttonHeight/2+5);const s=this.canvas.width/2-t.buttonWidth/2;e.strokeStyle=this.selectedOption==="shop"?c.UI_TEXT:c.UI_INACTIVE,e.strokeRect(s,t.buttonAreaY,t.buttonWidth,t.buttonHeight),e.fillStyle=this.selectedOption==="shop"?c.UI_TEXT:c.UI_INACTIVE,e.fillText("SHOP",this.canvas.width/2,t.buttonAreaY+t.buttonHeight/2+5),e.strokeStyle=this.selectedOption==="settings"?c.UI_TEXT:c.UI_INACTIVE,e.strokeRect(this.canvas.width-t.padding-t.buttonWidth,t.buttonAreaY,t.buttonWidth,t.buttonHeight),e.fillStyle=this.selectedOption==="settings"?c.UI_TEXT:c.UI_INACTIVE,e.fillText("SETTINGS",this.canvas.width-t.padding-t.buttonWidth/2,t.buttonAreaY+t.buttonHeight/2+5),e.fillStyle=c.UI_TEXT,e.font="14px monospace",e.textAlign="left",e.fillText(`Money: $${this.gameState.playerData.money}`,t.padding,t.statsAreaY)}}class ue{constructor(e,t){this.canvas=e,this.gameState=t,this.selectedUpgrade=null,this.scrollOffset=0,this.maxScroll=0,this.setupEventListeners()}getLayout(){const s=this.canvas.height*.1,a=this.canvas.height*.2,i=this.canvas.height*.35,o=60,n=this.canvas.height-i-50,h=Math.floor(n/o);return{padding:20,backButtonY:20,titleY:s,statsY:a,upgradesY:i,upgradeBoxHeight:52,upgradeBoxWidth:350,upgradeBoxSpacing:o,maxVisibleItems:h,visibleHeight:n}}setupEventListeners(){this.handleMouseMove=e=>this.onMouseMove(e),this.handleClick=e=>this.onClick(e),this.handleWheel=e=>this.onWheel(e)}activate(){this.canvas.addEventListener("mousemove",this.handleMouseMove),this.canvas.addEventListener("click",this.handleClick),this.canvas.addEventListener("wheel",this.handleWheel);const e=this.getLayout(),s=this.getUpgrades().length*e.upgradeBoxSpacing;this.maxScroll=Math.max(0,s-e.visibleHeight),this.scrollOffset=0}deactivate(){this.canvas.removeEventListener("mousemove",this.handleMouseMove),this.canvas.removeEventListener("click",this.handleClick),this.canvas.removeEventListener("wheel",this.handleWheel)}onMouseMove(e){const t=this.canvas.getBoundingClientRect(),s=parseFloat(this.canvas.dataset.scale||1),a=(e.clientX-t.left)/s,i=(e.clientY-t.top)/s,o=this.getLayout(),n=this.getUpgrades();this.selectedUpgrade=null;for(let h=0;h<n.length;h++){const d=o.upgradesY+h*o.upgradeBoxSpacing-this.scrollOffset;if(d>=o.upgradesY-o.upgradeBoxHeight&&d<=this.canvas.height&&a>=50&&a<=50+o.upgradeBoxWidth&&i>=d&&i<=d+o.upgradeBoxHeight){this.selectedUpgrade=h;break}}this.backHovered=a>=o.padding&&a<=o.padding+100&&i>=o.backButtonY&&i<=o.backButtonY+40}onClick(e){if(this.backHovered)this.onBackClick();else if(this.selectedUpgrade!==null){const t=this.getUpgrades();this.purchaseUpgrade(t[this.selectedUpgrade])}}getUpgrades(){const e=[],t=this.gameState.playerData;t.upgradePurchases||(t.upgradePurchases={health:0,speed:0,damage:0,fireRate:0,dodge:0,luck:0,critChance:0,critDamage:0,regeneration:0});for(const[s,a]of Object.entries(p.upgrades)){const i=t.upgradePurchases[s]||0,o=Math.floor(a.baseCost*Math.pow(a.costScaling,i));let n="";switch(s){case"health":n=`Health +${a.value}`;break;case"speed":n=`Speed +${a.value}`;break;case"damage":n=`Damage +${a.value}`;break;case"fireRate":n=`Fire Rate +${a.value}`;break;case"dodge":n=`Dodge +${a.value}%`;break;case"luck":n=`Luck +${a.value}`;break;case"critChance":n=`Crit Chance +${a.value}%`;break;case"critDamage":n=`Crit Damage +${a.value}%`;break;case"regeneration":n=`Regen +${a.value}/s`;break}e.push({name:n,cost:o,stat:s,value:a.value,purchases:i})}return e}purchaseUpgrade(e){const t=this.gameState.playerData;t.money>=e.cost&&(t.money-=e.cost,t.stats[e.stat]+=e.value,t.upgradePurchases[e.stat]=(t.upgradePurchases[e.stat]||0)+1,this.gameState.savePlayerData())}onWheel(e){e.preventDefault();const t=30;e.deltaY>0?this.scrollOffset=Math.min(this.maxScroll,this.scrollOffset+t):this.scrollOffset=Math.max(0,this.scrollOffset-t)}onBackClick(){}render(e){const t=this.getLayout();e.fillStyle=c.BACKGROUND,e.fillRect(0,0,this.canvas.width,this.canvas.height),e.strokeStyle=this.backHovered?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(t.padding,t.backButtonY,100,40),e.fillStyle=this.backHovered?c.UI_TEXT:c.UI_INACTIVE,e.font="16px monospace",e.textAlign="center",e.fillText("< BACK",t.padding+50,t.backButtonY+25),e.fillStyle=c.UI_TEXT,e.font="bold 32px monospace",e.textAlign="center",e.fillText("STAT UPGRADES",this.canvas.width/2,t.titleY);const s=this.gameState.playerData.stats;e.font="16px monospace",e.textAlign="left",e.fillStyle=c.UI_TEXT;const a=this.canvas.width-280;e.fillText("CURRENT STATS",a,t.statsY),e.font="14px monospace",e.fillText(`Health: ${s.health}`,a,t.statsY+30),e.fillText(`Speed: ${s.speed}`,a,t.statsY+50),e.fillText(`Damage: ${s.damage}`,a,t.statsY+70),e.fillText(`Fire Rate: ${s.fireRate.toFixed(1)}/s`,a,t.statsY+90),e.fillText(`Dodge: ${s.dodge}%`,a,t.statsY+110),e.fillText(`Luck: ${s.luck}`,a,t.statsY+130),e.fillText(`Crit Chance: ${s.critChance}%`,a,t.statsY+150),e.fillText(`Crit Damage: ${s.critDamage}%`,a,t.statsY+170),e.fillText(`Regen: ${(s.regeneration*10).toFixed(1)} HP/s`,a,t.statsY+190),e.font="16px monospace",e.fillText(`Money: $${this.gameState.playerData.money}`,50,t.statsY),e.fillText("AVAILABLE UPGRADES",50,t.upgradesY-20),this.maxScroll>0&&(e.font="10px monospace",e.fillStyle=c.UI_INACTIVE,e.textAlign="right",e.fillText("(Scroll to see more)",50+t.upgradeBoxWidth,t.upgradesY-20)),e.save(),e.beginPath(),e.rect(0,t.upgradesY,this.canvas.width,t.visibleHeight),e.clip();const i=this.getUpgrades();for(let o=0;o<i.length;o++){const n=i[o],h=t.upgradesY+o*t.upgradeBoxSpacing-this.scrollOffset;if(h+t.upgradeBoxHeight<t.upgradesY||h>this.canvas.height)continue;const d=this.gameState.playerData.money>=n.cost;e.strokeStyle=o===this.selectedUpgrade&&d?c.UI_TEXT:d?c.UI_INACTIVE:"#002200",e.lineWidth=2,e.strokeRect(50,h,t.upgradeBoxWidth,t.upgradeBoxHeight),e.font="14px monospace",e.fillStyle=d?c.UI_TEXT:"#003300",e.textAlign="left",e.fillText(n.name,60,h+20),e.fillText(`Cost: $${n.cost}`,60,h+38),n.purchases>0&&e.fillText(`(Bought: ${n.purchases}x)`,200,h+38)}if(e.restore(),this.maxScroll>0){const o=t.upgradesY,n=410,h=t.visibleHeight/(i.length*t.upgradeBoxSpacing)*t.visibleHeight,d=o+this.scrollOffset/this.maxScroll*(t.visibleHeight-h);e.strokeStyle=c.UI_INACTIVE,e.lineWidth=1,e.beginPath(),e.moveTo(n,o),e.lineTo(n,o+t.visibleHeight),e.stroke(),e.strokeStyle=c.UI_TEXT,e.lineWidth=3,e.beginPath(),e.moveTo(n,d),e.lineTo(n,d+h),e.stroke()}}}class me{constructor(e,t){this.canvas=e,this.gameState=t,this.hoveredOption=null,this.setupEventListeners()}setupEventListeners(){this.handleMouseMove=e=>this.onMouseMove(e),this.handleClick=e=>this.onClick(e)}activate(){this.canvas.addEventListener("mousemove",this.handleMouseMove),this.canvas.addEventListener("click",this.handleClick)}deactivate(){this.canvas.removeEventListener("mousemove",this.handleMouseMove),this.canvas.removeEventListener("click",this.handleClick)}onMouseMove(e){const t=this.canvas.getBoundingClientRect(),s=parseFloat(this.canvas.dataset.scale||1),a=(e.clientX-t.left)/s,i=(e.clientY-t.top)/s;this.backHovered=a>=20&&a<=120&&i>=20&&i<=60,this.hoveredOption=null,a>=200&&a<=350&&i>=150&&i<=200?this.hoveredOption="mouse":a>=450&&a<=600&&i>=150&&i<=200&&(this.hoveredOption="keyboard"),this.resetHovered=a>=this.canvas.width/2-100&&a<=this.canvas.width/2+100&&i>=300&&i<=340}onClick(e){this.backHovered?this.onBackClick():this.hoveredOption==="mouse"?(this.gameState.playerData.controlScheme=I.MOUSE,this.gameState.savePlayerData()):this.hoveredOption==="keyboard"?(this.gameState.playerData.controlScheme=I.KEYBOARD,this.gameState.savePlayerData()):this.resetHovered&&confirm("Reset all progress? This cannot be undone!")&&this.gameState.resetProgress()}onBackClick(){console.log("Back to menu")}render(e){e.fillStyle=c.BACKGROUND,e.fillRect(0,0,this.canvas.width,this.canvas.height),e.strokeStyle=this.backHovered?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(20,20,100,40),e.fillStyle=this.backHovered?c.UI_TEXT:c.UI_INACTIVE,e.font="16px monospace",e.textAlign="center",e.fillText("< BACK",70,45),e.fillStyle=c.UI_TEXT,e.font="bold 32px monospace",e.textAlign="center",e.fillText("SETTINGS",this.canvas.width/2,60),e.font="20px monospace",e.fillText("CONTROL SCHEME",this.canvas.width/2,120);const t=this.gameState.playerData.controlScheme===I.MOUSE;e.strokeStyle=t||this.hoveredOption==="mouse"?c.UI_TEXT:c.UI_INACTIVE,e.fillStyle=t||this.hoveredOption==="mouse"?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=t?3:2,e.strokeRect(200,150,150,50),e.font="16px monospace",e.fillText("MOUSE",275,180);const s=this.gameState.playerData.controlScheme===I.KEYBOARD;e.strokeStyle=s||this.hoveredOption==="keyboard"?c.UI_TEXT:c.UI_INACTIVE,e.fillStyle=s||this.hoveredOption==="keyboard"?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=s?3:2,e.strokeRect(450,150,150,50),e.fillText("WASD",525,180),e.font="14px monospace",e.fillStyle=c.UI_INACTIVE,e.fillText("Mouse: Character follows cursor",this.canvas.width/2,230),e.fillText("WASD: Use W/A/S/D or Arrow keys",this.canvas.width/2,250),e.strokeStyle=this.resetHovered?"#FF0000":"#660000",e.lineWidth=2,e.strokeRect(this.canvas.width/2-100,300,200,40),e.fillStyle=this.resetHovered?"#FF0000":"#660000",e.font="16px monospace",e.fillText("RESET PROGRESS",this.canvas.width/2,325),e.fillStyle=c.UI_TEXT,e.font="14px monospace",e.fillText("Press ESC during game to return to menu",this.canvas.width/2,380)}}class ge{constructor(e,t,s){this.canvas=e,this.gameState=t,this.soundSystem=s,this.activeTab="weapons",this.scrollOffset=0,this.maxScroll=0,this.hoveredItem=null,this.selectedCategory=null,this.showContinueButton=!1,this.hoveredSellButton=null,this.hoveredUpgradeButton=null,this.maxWeapons=4,this.weapons=Object.entries(p.weapons).map(([a,i])=>({id:a,...i,type:"weapon",owned:!1})).sort((a,i)=>a.cost-i.cost),this.items=Object.entries(p.items).map(([a,i])=>({id:a,...i,type:"item",owned:!1})).sort((a,i)=>a.cost-i.cost),this.setupEventListeners()}getLayout(){const o=this.canvas.height-60,n=this.canvas.height-137-25,h=p.ui.shopItemHeight,d=Math.floor(n/h);return{padding:20,backButtonY:20,titleY:44,tabsY:82,contentY:137,contentHeight:n,itemHeight:h,maxVisibleItems:d,itemWidth:this.canvas.width-80,scrollbarX:this.canvas.width-20-10,scrollbarWidth:6,continueButtonY:o}}setupEventListeners(){this.handleMouseMove=e=>this.onMouseMove(e),this.handleClick=e=>this.onClick(e),this.handleWheel=e=>this.onWheel(e)}activate(){this.canvas.addEventListener("mousemove",this.handleMouseMove),this.canvas.addEventListener("click",this.handleClick),this.canvas.addEventListener("wheel",this.handleWheel),this.updateOwnership()}deactivate(){this.canvas.removeEventListener("mousemove",this.handleMouseMove),this.canvas.removeEventListener("click",this.handleClick),this.canvas.removeEventListener("wheel",this.handleWheel)}updateOwnership(){const e=this.gameState.playerData.weapons||["pistol"];this.weapons.forEach(a=>{a.owned=e.includes(a.id)});const t=this.gameState.playerData.items||[],s=this.gameState.playerData.itemStacks||{};this.items.forEach(a=>{if(a.maxStacks>1){const i=s[a.id]||0;a.owned=!1,a.currentStacks=i,a.atMaxStacks=i>=a.maxStacks}else a.owned=t.includes(a.id)})}getMousePosition(e){const t=this.canvas.getBoundingClientRect(),s=parseFloat(this.canvas.dataset.scale||1);return{x:(e.clientX-t.left)/s,y:(e.clientY-t.top)/s}}onMouseMove(e){const t=this.getMousePosition(e),s=this.getLayout();this.showContinueButton?(this.continueHovered=t.x>=this.canvas.width/2-75&&t.x<=this.canvas.width/2+75&&t.y>=s.continueButtonY&&t.y<=s.continueButtonY+40,this.backHovered=!1):(this.backHovered=t.x>=s.padding&&t.x<=s.padding+100&&t.y>=s.backButtonY&&t.y<=s.backButtonY+40,this.continueHovered=!1);const a=150,i=this.canvas.width/2-a-10,o=this.canvas.width/2+10;t.y>=s.tabsY&&t.y<=s.tabsY+40?t.x>=i&&t.x<=i+a?this.hoveredTab="weapons":t.x>=o&&t.x<=o+a?this.hoveredTab="items":this.hoveredTab=null:this.hoveredTab=null,this.hoveredItem=null,this.hoveredSellButton=null,this.hoveredUpgradeButton=null;const n=this.activeTab==="weapons"?this.weapons:this.items,h=Math.floor(this.scrollOffset),d=Math.min(h+s.maxVisibleItems,n.length);for(let r=h;r<d;r++){const l=n[r],m=s.contentY+(r-this.scrollOffset)*s.itemHeight;if(l.owned&&l.type==="weapon")if((this.gameState.playerData.weaponLevels&&this.gameState.playerData.weaponLevels[l.id]||1)<p.weaponUpgrades.maxLevel){const v=s.padding*2+s.itemWidth-100,f=m+45;if(t.x>=v&&t.x<=v+80&&t.y>=f&&t.y<=f+25){this.hoveredUpgradeButton=l;break}const S=s.padding*2+s.itemWidth-200,b=m+45;if(t.x>=S&&t.x<=S+80&&t.y>=b-5&&t.y<=b+20){this.hoveredSellButton=l;break}}else{const v=s.padding*2+s.itemWidth-100,f=m+45;if(t.x>=v&&t.x<=v+80&&t.y>=f&&t.y<=f+25){this.hoveredSellButton=l;break}}if(t.x>=s.padding*2&&t.x<=s.padding*2+s.itemWidth&&t.y>=m&&t.y<=m+s.itemHeight-5){this.hoveredItem=l;break}}}onClick(e){if(this.backHovered){this.onBackClick();return}if(this.continueHovered){this.onContinueClick();return}if(this.hoveredTab&&this.hoveredTab!==this.activeTab){this.activeTab=this.hoveredTab,this.scrollOffset=0,this.updateOwnership(),this.soundSystem&&this.soundSystem.play("buttonClick");return}this.hoveredUpgradeButton?this.upgradeWeapon(this.hoveredUpgradeButton):this.hoveredSellButton?this.sellWeapon(this.hoveredSellButton):this.hoveredItem&&!this.hoveredItem.owned&&!this.hoveredItem.atMaxStacks&&this.purchaseItem(this.hoveredItem)}onWheel(e){e.preventDefault();const t=this.getLayout(),s=this.activeTab==="weapons"?this.weapons:this.items,a=Math.max(0,s.length-t.maxVisibleItems),i=.5;this.scrollOffset+=(e.deltaY>0?1:-1)*i,this.scrollOffset=Math.max(0,Math.min(a,this.scrollOffset))}getCurrentItemCost(e){const t=this.gameState.playerData;if(e.maxStacks>1){const a=(t.itemStacks||{})[e.id]||0;let i=2;return e.cost<=10?i=1.8:e.cost<=50?i=2:e.cost>=200&&(i=2.5),e.id==="bounceHouse"&&e.stackCostMultiplier&&(i=Math.max(2,e.stackCostMultiplier)),Math.floor(e.cost*Math.pow(i,a))}return e.cost}purchaseItem(e){const t=this.gameState.playerData;if(e.type==="weapon"&&(t.weapons||["pistol"]).length>=this.maxWeapons){this.soundSystem&&this.soundSystem.play("purchaseFail");return}const s=this.getCurrentItemCost(e);if(t.money>=s){if(t.money-=s,e.type==="weapon")t.weapons||(t.weapons=["pistol"]),t.weaponLevels||(t.weaponLevels={pistol:1}),t.weapons.includes(e.id)||(t.weapons.push(e.id),t.weaponLevels[e.id]=1);else if(t.items||(t.items=[]),t.itemStacks||(t.itemStacks={}),e.maxStacks>1){if(t.itemStacks[e.id]||(t.itemStacks[e.id]=0),t.itemStacks[e.id]>=e.maxStacks){this.soundSystem&&this.soundSystem.play("purchaseFail");return}t.itemStacks[e.id]++,e.id==="bounceHouse"&&(t.bounceHouseStacks=t.itemStacks[e.id]),t.items.includes(e.id)||t.items.push(e.id),this.applyItemEffect(e.id)}else t.items.includes(e.id)||(t.items.push(e.id),this.applyItemEffect(e.id));e.maxStacks===1&&(e.owned=!0),this.updateOwnership(),this.gameState.savePlayerData(),this.soundSystem&&this.soundSystem.play("purchaseSuccess")}else this.soundSystem&&this.soundSystem.play("purchaseFail")}applyItemEffect(e){const t=this.gameState.playerData,s=p.items[e];switch(e){case"moneyMagnet":t.stats.pickupRange*=s.rangeMultiplier;break;case"luckyPenny":t.stats.luck+=s.luckBonus;break;case"speedBoots":t.stats.speed*=s.speedMultiplier;break;case"sharpShooter":t.stats.critChance+=s.critChanceBonus,t.stats.critDamage+=s.critDamageBonus;break;case"tankArmor":t.stats.health+=s.healthBonus;break;case"rapidReload":t.stats.fireRate*=s.fireRateMultiplier;break;case"luckyCoin":t.stats.luck+=s.luckBonus;break;case"energyDrink":t.stats.speed+=s.speedBonus;break;case"proteinBar":t.stats.health+=s.healthBonus;break;case"sharpTips":t.stats.damage*=1+s.damagePercent;break;case"quickHands":t.stats.fireRate*=1+s.fireRatePercent;break;case"bandaidPack":t.stats.regeneration+=s.regenBonus;break;case"coffeeShot":t.stats.speed*=1+s.speedPercent,t.stats.fireRate*=1+s.fireRatePercent;break;case"magnetGloves":t.stats.pickupRange+=s.pickupRangeBonus;break;case"criticalEye":t.stats.critChance+=s.critChanceBonus;break;case"heavyRounds":t.stats.damage*=s.damageMultiplier,t.stats.fireRate*=s.fireRateMultiplier;break;case"shieldGenerator":break;case"adrenalineRush":break;case"doubleTap":break;case"bloodPact":break;case"glassCannon":t.stats.damage*=s.damageMultiplier,t.stats.health*=s.healthMultiplier;break}}upgradeWeapon(e){const t=this.gameState.playerData;t.weaponLevels||(t.weaponLevels={});const s=t.weaponLevels[e.id]||1;if(s>=p.weaponUpgrades.maxLevel){this.soundSystem&&this.soundSystem.play("purchaseFail");return}const a=Math.max(25,Math.floor(e.cost*s));t.money>=a?(t.money-=a,t.weaponLevels[e.id]=s+1,this.gameState.savePlayerData(),this.soundSystem&&this.soundSystem.play("upgrade")):this.soundSystem&&this.soundSystem.play("purchaseFail")}sellWeapon(e){const t=this.gameState.playerData;if(t.weapons.length<=1){this.soundSystem&&this.soundSystem.play("purchaseFail");return}const s=Math.floor(e.cost*.8);t.money+=s,t.weapons=t.weapons.filter(a=>a!==e.id),t.weaponLevels&&delete t.weaponLevels[e.id],e.owned=!1,this.gameState.savePlayerData(),this.soundSystem&&this.soundSystem.play("sell")}onBackClick(){}onContinueClick(){}render(e){const t=this.getLayout();if(e.fillStyle=c.BACKGROUND,e.fillRect(0,0,this.canvas.width,this.canvas.height),this.showContinueButton?(e.strokeStyle=this.continueHovered?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(this.canvas.width/2-75,t.continueButtonY,150,40),e.fillStyle=this.continueHovered?c.UI_TEXT:c.UI_INACTIVE,e.font="16px monospace",e.textAlign="center",e.fillText("CONTINUE",this.canvas.width/2,t.continueButtonY+25)):(e.strokeStyle=this.backHovered?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(t.padding,t.backButtonY,100,40),e.fillStyle=this.backHovered?c.UI_TEXT:c.UI_INACTIVE,e.font="16px monospace",e.textAlign="center",e.fillText("< BACK",t.padding+50,t.backButtonY+25)),e.fillStyle=c.UI_TEXT,e.font="bold 32px monospace",e.textAlign="center",e.fillText("SHOP",this.canvas.width/2,t.titleY),this.activeTab==="weapons"){const r=this.gameState.playerData.weapons||["pistol"];e.font="14px monospace",e.fillStyle=r.length>=this.maxWeapons?"#FF0000":c.UI_TEXT,e.textAlign="left",e.fillText(`Weapon Slots: ${r.length}/${this.maxWeapons}`,t.padding,t.titleY+30),r.length>=this.maxWeapons&&(e.font="12px monospace",e.fillStyle="#FF0000",e.fillText("(Sell to buy more)",t.padding+150,t.titleY+30))}e.font="20px monospace",e.fillStyle="#FFD700",e.textAlign="right",e.fillText(`$${this.gameState.playerData.money}`,this.canvas.width-t.padding,t.titleY);const s=150,a=40,i=this.canvas.width/2-s-10,o=this.canvas.width/2+10;e.fillStyle=this.activeTab==="weapons"?c.UI_TEXT:c.UI_INACTIVE,e.strokeStyle=this.activeTab==="weapons"?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(i,t.tabsY,s,a),this.activeTab==="weapons"&&e.fillRect(i,t.tabsY,s,3),e.font="16px monospace",e.textAlign="center",e.fillText("WEAPONS",i+s/2,t.tabsY+25),e.fillStyle=this.activeTab==="items"?c.UI_TEXT:c.UI_INACTIVE,e.strokeStyle=this.activeTab==="items"?c.UI_TEXT:c.UI_INACTIVE,e.strokeRect(o,t.tabsY,s,a),this.activeTab==="items"&&e.fillRect(o,t.tabsY,s,3),e.fillText("ITEMS",o+s/2,t.tabsY+25),e.save(),e.beginPath(),e.rect(0,t.contentY,this.canvas.width,t.contentHeight),e.clip();const n=this.activeTab==="weapons"?this.weapons:this.items,h=Math.floor(this.scrollOffset),d=Math.min(h+t.maxVisibleItems+1,n.length);for(let r=h;r<d;r++){const l=n[r],m=t.contentY+(r-this.scrollOffset)*t.itemHeight;if(m<t.contentY-t.itemHeight||m>t.contentY+t.contentHeight)continue;l===this.hoveredItem&&!l.owned&&!l.atMaxStacks?(l.type!=="weapon"||(this.gameState.playerData.weapons||["pistol"]).length<this.maxWeapons?e.fillStyle="rgba(0, 255, 0, 0.1)":e.fillStyle="rgba(255, 0, 0, 0.1)",e.fillRect(t.padding*2,m,t.itemWidth,t.itemHeight-5)):l===this.hoveredItem&&l.atMaxStacks&&(e.fillStyle="rgba(0, 255, 255, 0.1)",e.fillRect(t.padding*2,m,t.itemWidth,t.itemHeight-5)),l.atMaxStacks?e.strokeStyle="#00FFFF":l.owned||l.maxStacks>1&&l.currentStacks>0?e.strokeStyle="#00FF00":e.strokeStyle=l===this.hoveredItem?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(t.padding*2,m,t.itemWidth,t.itemHeight-5),e.font="bold 16px monospace",e.textAlign="left",e.fillStyle=l.owned?"#00FF00":c.UI_TEXT;let u=l.name;if(l.type!=="weapon")if(l.maxStacks>1){const f=l.currentStacks||0;u+=` [${f}/${l.maxStacks}]`,f>=l.maxStacks?e.fillStyle="#00FFFF":e.fillStyle="#00FF00"}else{const f=l.owned?1:0;u+=` [${f}/1]`}else if(l.owned&&l.type==="weapon"){const f=this.gameState.playerData.weaponLevels&&this.gameState.playerData.weaponLevels[l.id]||1;u+=` [Lv${f}]`,f<p.weaponUpgrades.maxLevel&&(e.fillStyle="#FFD700")}e.fillText(u,t.padding*3,m+25),e.font="12px monospace",e.fillStyle=c.UI_INACTIVE;let v=l.description;if(l.id==="bounceHouse"){const f=this.gameState.playerData.bounceHouseStacks||0;f>0&&(v=`Projectiles bounce ${f} times (next: ${f+1} times)`)}else l.maxStacks>1&&l.currentStacks>0?l.luckBonus?v=`+${l.luckBonus*(l.currentStacks||0)} Luck (next: +${l.luckBonus})`:l.speedBonus?v=`+${l.speedBonus*(l.currentStacks||0)} Speed (next: +${l.speedBonus})`:l.healthBonus&&(v=`+${(l.healthBonus*(l.currentStacks||0)).toFixed(1)} Health (next: +${l.healthBonus})`):l.owned&&l.type==="weapon"&&(this.gameState.playerData.weaponLevels&&this.gameState.playerData.weaponLevels[l.id]||1)<p.weaponUpgrades.maxLevel&&(v=l.upgradeDescription||l.description);if(e.fillText(v,t.padding*3,m+45),e.font="14px monospace",e.textAlign="right",l.owned)if(l.type==="weapon"){const f=this.gameState.playerData.weaponLevels&&this.gameState.playerData.weaponLevels[l.id]||1;if(f<p.weaponUpgrades.maxLevel){const S=Math.max(25,Math.floor(l.cost*f)),b=this.gameState.playerData.money>=S;e.fillStyle="#FFD700",e.fillText(`Lv${f}→${f+1}`,t.padding*2+t.itemWidth-80,m+25);const w=t.padding*2+t.itemWidth-100,T=m+45;e.strokeStyle=this.hoveredUpgradeButton===l?"#FFD700":b?c.UI_TEXT:"#660000",e.lineWidth=1,e.strokeRect(w,T,80,25),e.font="11px monospace",e.fillStyle=this.hoveredUpgradeButton===l?"#FFD700":b?c.UI_TEXT:"#FF0000",e.textAlign="center",e.fillText(`UPGRADE $${S}`,w+40,T+16)}else{e.fillStyle="#00FFFF",e.fillText("MAX LEVEL",t.padding*2+t.itemWidth-20,m+25);const S=t.padding*2+t.itemWidth-100,b=m+45,w=Math.floor(l.cost*.8);(this.gameState.playerData.weapons||["pistol"]).length<=1?(e.strokeStyle="#330000",e.lineWidth=1,e.strokeRect(S,b,80,25),e.font="11px monospace",e.fillStyle="#660000",e.textAlign="center",e.fillText(`SELL $${w}`,S+40,b+16)):(e.strokeStyle=this.hoveredSellButton===l?"#FFD700":c.UI_INACTIVE,e.lineWidth=1,e.strokeRect(S,b,80,25),e.font="11px monospace",e.fillStyle=this.hoveredSellButton===l?"#FFD700":c.UI_INACTIVE,e.textAlign="center",e.fillText(`SELL $${w}`,S+40,b+16))}if(f<p.weaponUpgrades.maxLevel){const S=t.padding*2+t.itemWidth-200,b=m+45,w=Math.floor(l.cost*.8);(this.gameState.playerData.weapons||["pistol"]).length<=1||(e.font="10px monospace",e.fillStyle=this.hoveredSellButton===l?"#FF6666":"#666666",e.textAlign="center",e.fillText(`[Sell $${w}]`,S+40,b+16))}}else e.fillStyle="#00FF00",e.fillText("OWNED",t.padding*2+t.itemWidth-20,m+25);else if(!(l.type!=="weapon"||(this.gameState.playerData.weapons||["pistol"]).length<this.maxWeapons))e.fillStyle="#FF0000",e.fillText("SLOTS FULL",t.padding*2+t.itemWidth-20,m+35);else if(l.atMaxStacks)e.fillStyle="#00FFFF",e.fillText("MAX STACKS",t.padding*2+t.itemWidth-20,m+35);else{const S=this.getCurrentItemCost(l),b=this.gameState.playerData.money>=S;if(l.maxStacks>1){const T=(l.currentStacks||0)+1;e.font="14px monospace",e.textAlign="right",e.fillStyle=b?"#FFD700":"#FF0000",e.fillText(`$${S}`,t.padding*2+t.itemWidth-20,m+35),e.font="10px monospace",e.fillStyle="#FFD700",e.fillText(`BUY #${T}`,t.padding*2+t.itemWidth-20,m+20)}else e.font="14px monospace",e.textAlign="right",e.fillStyle=b?"#FFD700":"#FF0000",e.fillText(`$${S}`,t.padding*2+t.itemWidth-20,m+35)}}if(e.restore(),n.length>t.maxVisibleItems){const r=t.contentHeight,l=Math.max(30,t.maxVisibleItems/n.length*r),m=r-l,u=this.scrollOffset/(n.length-t.maxVisibleItems)*m;e.fillStyle=c.UI_INACTIVE,e.fillRect(t.scrollbarX,t.contentY,t.scrollbarWidth,r),e.fillStyle=c.UI_TEXT,e.fillRect(t.scrollbarX,t.contentY+u,t.scrollbarWidth,l)}}}class fe{constructor(e,t,s){this.canvas=e,this.gameState=t,this.soundSystem=s,this.upgrades=[],this.selectedUpgrade=null,this.hoveredOption=null,this.canReroll=!0,this.rerollsUsed=0,this.setupEventListeners()}setupEventListeners(){this.handleMouseMove=e=>this.onMouseMove(e),this.handleClick=e=>this.onClick(e)}activate(){this.canvas.addEventListener("mousemove",this.handleMouseMove),this.canvas.addEventListener("click",this.handleClick),this.generateUpgrades()}deactivate(){this.canvas.removeEventListener("mousemove",this.handleMouseMove),this.canvas.removeEventListener("click",this.handleClick)}generateUpgrades(){const e=p.endWaveUpgrades.upgradeTypes,t=p.endWaveUpgrades.optionsCount,s=e.reduce((i,o)=>i+o.weight,0);this.upgrades=[];const a=new Set;for(;this.upgrades.length<t&&a.size<e.length;){let i=Math.random()*s,o=null;for(const n of e)if(i-=n.weight,i<=0&&!a.has(n.type)){o=n.type,a.add(n.type);break}o&&this.upgrades.push(this.createUpgrade(o))}for(;this.upgrades.length<t;){const i=e[Math.floor(Math.random()*e.length)];this.upgrades.push(this.createUpgrade(i.type))}}createUpgrade(e){const t=p.endWaveUpgrades.upgradeTypes.find(s=>s.type===e);return t?{type:e,name:this.getUpgradeName(e),description:t.display,value:t.value,icon:this.getUpgradeIcon(e)}:null}getUpgradeName(e){return{health:"Vitality",damage:"Power",fireRate:"Rapid Fire",speed:"Swiftness",dodge:"Evasion",luck:"Fortune",critChance:"Precision",critDamage:"Devastation",regeneration:"Recovery"}[e]||e}getUpgradeIcon(e){return{health:"❤",damage:"⚔",fireRate:"⚡",speed:"👟",dodge:"🛡",luck:"🍀",critChance:"🎯",critDamage:"💥",regeneration:"✨"}[e]||"◆"}getLayout(){const t=this.canvas.height*.15,s=this.canvas.height*.35,a=140,i=200,o=30,n=a*4+o*3,h=(this.canvas.width-n)/2,d=this.canvas.height*.75,r=this.canvas.height*.85;return{padding:40,titleY:t,cardsY:s,cardWidth:a,cardHeight:i,cardSpacing:o,startX:h,rerollY:d,skipY:r,buttonWidth:150,buttonHeight:40}}getMousePosition(e){const t=this.canvas.getBoundingClientRect(),s=parseFloat(this.canvas.dataset.scale||1);return{x:(e.clientX-t.left)/s,y:(e.clientY-t.top)/s}}onMouseMove(e){const t=this.getMousePosition(e),s=this.getLayout();this.hoveredOption=null;for(let o=0;o<this.upgrades.length;o++){const n=s.startX+o*(s.cardWidth+s.cardSpacing);if(t.x>=n&&t.x<=n+s.cardWidth&&t.y>=s.cardsY&&t.y<=s.cardsY+s.cardHeight){this.hoveredOption={type:"upgrade",index:o};return}}const a=this.canvas.width/2-s.buttonWidth-20;if(this.canReroll&&t.x>=a&&t.x<=a+s.buttonWidth&&t.y>=s.rerollY&&t.y<=s.rerollY+s.buttonHeight){this.hoveredOption={type:"reroll"};return}const i=this.canvas.width/2+20;if(t.x>=i&&t.x<=i+s.buttonWidth&&t.y>=s.rerollY&&t.y<=s.rerollY+s.buttonHeight){this.hoveredOption={type:"skip"};return}}onClick(e){this.hoveredOption&&(this.hoveredOption.type==="upgrade"?this.selectUpgrade(this.upgrades[this.hoveredOption.index]):this.hoveredOption.type==="reroll"?this.reroll():this.hoveredOption.type==="skip"&&this.skip())}selectUpgrade(e){if(!e)return;const t=this.gameState.playerData.stats;switch(e.type){case"health":t.health+=e.value;break;case"damage":t.damage+=e.value;break;case"fireRate":t.fireRate+=e.value;break;case"speed":t.speed+=e.value;break;case"dodge":t.dodge=Math.min(95,t.dodge+e.value);break;case"luck":t.luck+=e.value;break;case"critChance":t.critChance=Math.min(100,t.critChance+e.value);break;case"critDamage":t.critDamage+=e.value;break;case"regeneration":t.regeneration+=e.value;break}this.gameState.savePlayerData(),this.soundSystem&&this.soundSystem.play("levelUp"),this.onUpgradeSelected()}reroll(){if(!this.canReroll)return;const e=p.endWaveUpgrades.rerollCost*(this.rerollsUsed+1);this.gameState.playerData.money>=e?(this.gameState.playerData.money-=e,this.gameState.savePlayerData(),this.rerollsUsed++,this.generateUpgrades(),this.soundSystem&&this.soundSystem.play("buttonClick"),this.rerollsUsed>=3&&(this.canReroll=!1)):this.soundSystem&&this.soundSystem.play("purchaseFail")}skip(){this.soundSystem&&this.soundSystem.play("buttonClick"),this.onUpgradeSelected()}onUpgradeSelected(){}render(e){const t=this.getLayout();e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(0,0,this.canvas.width,this.canvas.height),e.fillStyle=c.UI_TEXT,e.font="bold 36px monospace",e.textAlign="center",e.fillText("CHOOSE AN UPGRADE",this.canvas.width/2,t.titleY),e.font="16px monospace",e.fillStyle=c.UI_INACTIVE,e.fillText("Select one upgrade to improve your character",this.canvas.width/2,t.titleY+30);for(let d=0;d<this.upgrades.length;d++){const r=this.upgrades[d],l=t.startX+d*(t.cardWidth+t.cardSpacing),m=this.hoveredOption?.type==="upgrade"&&this.hoveredOption.index===d;m&&(e.fillStyle="rgba(0, 255, 0, 0.2)",e.fillRect(l,t.cardsY,t.cardWidth,t.cardHeight)),e.strokeStyle=m?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=m?3:2,e.strokeRect(l,t.cardsY,t.cardWidth,t.cardHeight),e.font="48px serif",e.textAlign="center",e.fillStyle=c.UI_TEXT,e.fillText(r.icon,l+t.cardWidth/2,t.cardsY+60),e.font="bold 16px monospace",e.fillStyle=c.UI_TEXT,e.fillText(r.name,l+t.cardWidth/2,t.cardsY+100),e.font="12px monospace",e.fillStyle=c.UI_INACTIVE;const u=this.wrapText(r.description,t.cardWidth-20);for(let v=0;v<u.length;v++)e.fillText(u[v],l+t.cardWidth/2,t.cardsY+130+v*15)}const s=this.canvas.width/2-t.buttonWidth-20,a=p.endWaveUpgrades.rerollCost*(this.rerollsUsed+1),i=this.gameState.playerData.money>=a,o=this.hoveredOption?.type==="reroll";this.canReroll&&(e.strokeStyle=o&&i?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(s,t.rerollY,t.buttonWidth,t.buttonHeight),e.font="14px monospace",e.textAlign="center",e.fillStyle=i?o?c.UI_TEXT:c.UI_INACTIVE:"#FF0000",e.fillText(`REROLL ($${a})`,s+t.buttonWidth/2,t.rerollY+25));const n=this.canvas.width/2+20,h=this.hoveredOption?.type==="skip";e.strokeStyle=h?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(n,t.rerollY,t.buttonWidth,t.buttonHeight),e.font="14px monospace",e.fillStyle=h?c.UI_TEXT:c.UI_INACTIVE,e.fillText("SKIP",n+t.buttonWidth/2,t.rerollY+25),e.font="16px monospace",e.textAlign="right",e.fillStyle="#FFD700",e.fillText(`Money: $${this.gameState.playerData.money}`,this.canvas.width-t.padding,t.padding)}wrapText(e,t){const s=e.split(" "),a=[];let i="";for(const o of s){const n=i?`${i} ${o}`:o;n.length*7>t?i?(a.push(i),i=o):a.push(o):i=n}return i&&a.push(i),a}}class ye{constructor(e,t){this.canvas=e,this.gameState=t,this.continueHovered=!1,this.finalStats=null,this.setupEventListeners()}setupEventListeners(){this.handleMouseMove=e=>this.onMouseMove(e),this.handleClick=e=>this.onClick(e)}activate(e={}){this.canvas.addEventListener("mousemove",this.handleMouseMove),this.canvas.addEventListener("click",this.handleClick),this.finalStats=e}deactivate(){this.canvas.removeEventListener("mousemove",this.handleMouseMove),this.canvas.removeEventListener("click",this.handleClick)}onMouseMove(e){const t=this.canvas.getBoundingClientRect(),s=parseFloat(this.canvas.dataset.scale||1),a=(e.clientX-t.left)/s,i=(e.clientY-t.top)/s,o=this.canvas.height*.7;this.continueHovered=a>=this.canvas.width/2-100&&a<=this.canvas.width/2+100&&i>=o&&i<=o+50}onClick(e){this.continueHovered&&this.onContinueClick()}onContinueClick(){}render(e){e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(0,0,this.canvas.width,this.canvas.height),e.fillStyle="#FF0000",e.font="bold 48px monospace",e.textAlign="center",e.fillText("GAME OVER",this.canvas.width/2,this.canvas.height*.2),e.fillStyle=c.UI_TEXT,e.font="20px monospace",e.fillText("You have fallen...",this.canvas.width/2,this.canvas.height*.3),this.finalStats&&(e.font="16px monospace",e.fillStyle=c.UI_INACTIVE,e.fillText(`Final Wave: ${this.finalStats.wave||1}`,this.canvas.width/2,this.canvas.height*.4),e.fillText(`Money Earned: $${this.finalStats.money||0}`,this.canvas.width/2,this.canvas.height*.45),e.fillText(`Enemies Defeated: ${this.finalStats.kills||0}`,this.canvas.width/2,this.canvas.height*.5)),e.font="18px monospace",e.fillStyle="#FF6600",e.fillText("ALL PROGRESS HAS BEEN RESET",this.canvas.width/2,this.canvas.height*.6),e.font="14px monospace",e.fillStyle=c.UI_INACTIVE,e.fillText("(Permadeath - Start from Level 1)",this.canvas.width/2,this.canvas.height*.63);const t=this.canvas.height*.7;e.strokeStyle=this.continueHovered?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(this.canvas.width/2-100,t,200,50),e.fillStyle=this.continueHovered?c.UI_TEXT:c.UI_INACTIVE,e.font="20px monospace",e.textAlign="center",e.fillText("CONTINUE",this.canvas.width/2,t+32)}}class ve{constructor(e){this.canvas=e,this.resumeHovered=!1,this.mainMenuHovered=!1,this.setupEventListeners()}setupEventListeners(){this.handleMouseMove=e=>this.onMouseMove(e),this.handleClick=e=>this.onClick(e),this.handleKeyDown=e=>this.onKeyDown(e)}activate(){this.canvas.addEventListener("mousemove",this.handleMouseMove),this.canvas.addEventListener("click",this.handleClick),document.addEventListener("keydown",this.handleKeyDown)}deactivate(){this.canvas.removeEventListener("mousemove",this.handleMouseMove),this.canvas.removeEventListener("click",this.handleClick),document.removeEventListener("keydown",this.handleKeyDown)}onMouseMove(e){const t=this.canvas.getBoundingClientRect(),s=parseFloat(this.canvas.dataset.scale||1),a=(e.clientX-t.left)/s,i=(e.clientY-t.top)/s,o=this.canvas.width/2,n=this.canvas.height*.4,h=this.canvas.height*.5;this.resumeHovered=a>=o-100&&a<=o+100&&i>=n&&i<=n+40,this.mainMenuHovered=a>=o-100&&a<=o+100&&i>=h&&i<=h+40}onClick(e){this.resumeHovered?this.onResumeClick():this.mainMenuHovered&&this.onMainMenuClick()}onKeyDown(e){e.key==="Escape"&&(e.preventDefault(),this.onResumeClick())}onResumeClick(){}onMainMenuClick(){}render(e){e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(0,0,this.canvas.width,this.canvas.height),e.fillStyle=c.UI_TEXT,e.font="bold 36px monospace",e.textAlign="center",e.fillText("PAUSED",this.canvas.width/2,this.canvas.height*.3),e.font="14px monospace",e.fillStyle=c.UI_INACTIVE,e.fillText("(Press ESC to resume)",this.canvas.width/2,this.canvas.height*.33);const t=this.canvas.width/2,s=this.canvas.height*.4;e.strokeStyle=this.resumeHovered?c.UI_TEXT:c.UI_INACTIVE,e.lineWidth=2,e.strokeRect(t-100,s,200,40),e.fillStyle=this.resumeHovered?c.UI_TEXT:c.UI_INACTIVE,e.font="18px monospace",e.fillText("RESUME",t,s+25);const a=this.canvas.height*.5;e.strokeStyle=this.mainMenuHovered?c.UI_TEXT:c.UI_INACTIVE,e.strokeRect(t-100,a,200,40),e.fillStyle=this.mainMenuHovered?c.UI_TEXT:c.UI_INACTIVE,e.fillText("MAIN MENU",t,a+25),e.font="12px monospace",e.fillStyle="#FF6600",e.fillText("(Progress will be saved)",t,a+60)}}class Se{constructor(e){this.canvas=e,this.screenShake={intensity:0,duration:0,offset:{x:0,y:0}},this.flashes=[],this.particles=[],this.floatingTexts=[]}addScreenShake(e=5,t=.2){this.screenShake.intensity=Math.max(this.screenShake.intensity,e),this.screenShake.duration=Math.max(this.screenShake.duration,t)}addFlash(e="#FFFFFF",t=.1){this.flashes.push({color:e,duration:t,maxDuration:t})}addDamageFlash(){this.addFlash("#FF0000",.15),this.addScreenShake(4,.25)}addKillEffect(e,t){for(let s=0;s<8;s++){const a=Math.PI*2*s/8,i=100+Math.random()*100;this.particles.push({x:e,y:t,vx:Math.cos(a)*i,vy:Math.sin(a)*i,life:.5,maxLife:.5,color:"#FF0000",size:3})}this.addScreenShake(1.5,.1)}addMoneyPickupEffect(e,t,s){this.floatingTexts.push({x:e,y:t,text:`+$${s}`,vy:-50,life:1,color:"#00FF00"});for(let a=0;a<4;a++){const i=Math.random()*Math.PI*2,o=50+Math.random()*50;this.particles.push({x:e,y:t,vx:Math.cos(i)*o,vy:Math.sin(i)*o,life:.3,maxLife:.3,color:"#00FF00",size:2})}}addLevelUpEffect(e,t){this.floatingTexts.push({x:e,y:t,text:"LEVEL UP!",vy:-30,life:2,color:"#FFFF00"});for(let s=0;s<16;s++){const a=Math.PI*2*s/16,i=150;this.particles.push({x:e,y:t,vx:Math.cos(a)*i,vy:Math.sin(a)*i,life:1,maxLife:1,color:"#FFFF00",size:4})}this.addFlash("#FFFF00",.3)}addMuzzleFlash(e,t,s,a="#FFFF00"){for(let i=0;i<3;i++){const o=(Math.random()-.5)*.3,n=s+o,h=200+Math.random()*100;this.particles.push({x:e+Math.cos(s)*10,y:t+Math.sin(s)*10,vx:Math.cos(n)*h,vy:Math.sin(n)*h,life:.1,maxLife:.1,color:a,size:2})}}addShellCasing(e,t){this.particles.push({x:e,y:t,vx:(Math.random()-.5)*100,vy:-100-Math.random()*50,life:.5,maxLife:.5,color:"#FFD700",size:3,gravity:300})}addImpactEffect(e,t,s="#00FF00"){for(let a=0;a<4;a++){const i=Math.random()*Math.PI*2,o=50+Math.random()*50;this.particles.push({x:e,y:t,vx:Math.cos(i)*o,vy:Math.sin(i)*o,life:.2,maxLife:.2,color:s,size:2})}}addExplosionEffect(e,t,s=50){this.addFlash("#FFA500",.2),this.addScreenShake(6,.4);for(let a=0;a<20;a++){const i=Math.PI*2*a/20,o=100+Math.random()*150;this.particles.push({x:e,y:t,vx:Math.cos(i)*o,vy:Math.sin(i)*o,life:.6,maxLife:.6,color:Math.random()>.5?"#FF4500":"#FFA500",size:5+Math.random()*3})}for(let a=0;a<10;a++){const i=Math.random()*Math.PI*2,o=30+Math.random()*50;this.particles.push({x:e,y:t,vx:Math.cos(i)*o,vy:Math.sin(i)*o-50,life:1,maxLife:1,color:"#666666",size:8})}}addChainLightningEffect(e,t,s,a){const i=s-e,o=a-t,n=Math.sqrt(i*i+o*o),h=Math.atan2(o,i),d=Math.floor(n/15),r=[{x:e,y:t}];for(let l=1;l<d;l++){const m=l/d,u=e+i*m,v=t+o*m,f=h+Math.PI/2,S=(Math.random()-.5)*20;r.push({x:u+Math.cos(f)*S,y:v+Math.sin(f)*S})}r.push({x:s,y:a});for(let l=0;l<r.length-1;l++){const m=r[l],u=r[l+1];this.particles.push({x:(m.x+u.x)/2,y:(m.y+u.y)/2,vx:0,vy:0,life:.2,maxLife:.2,color:"#00FFFF",size:4,lightning:!0,segment:{x1:m.x,y1:m.y,x2:u.x,y2:u.y}}),this.particles.push({x:(m.x+u.x)/2,y:(m.y+u.y)/2,vx:0,vy:0,life:.15,maxLife:.15,color:"#88FFFF",size:2,lightning:!0,segment:{x1:m.x,y1:m.y,x2:u.x,y2:u.y}})}for(const l of r)this.particles.push({x:l.x,y:l.y,vx:0,vy:0,life:.25,maxLife:.25,color:"#00FFFF",size:8,glow:!0})}addCritEffect(e,t){for(let s=0;s<8;s++){const a=Math.PI*2*s/8,i=200;this.particles.push({x:e,y:t,vx:Math.cos(a)*i,vy:Math.sin(a)*i,life:.3,maxLife:.3,color:"#FF00FF",size:3})}}addReloadEffect(e,t){this.floatingTexts.push({x:e,y:t,text:"RELOAD",vy:-20,life:.5,color:"#888888"})}addDamageNumber(e,t,s){this.floatingTexts.push({x:e+(Math.random()-.5)*20,y:t,text:s.toFixed(1),vy:-40,life:.8,color:"#FFFFFF",size:14})}addProjectileTrail(e,t,s="#00FF00",a=2){this.particles.push({x:e,y:t,vx:(Math.random()-.5)*20,vy:(Math.random()-.5)*20,life:.2,maxLife:.2,color:s,size:a,fade:!0})}addWaveTrail(e,t,s="#FF8800"){this.particles.push({x:e,y:t,vx:0,vy:0,life:2,maxLife:2,color:s,size:3,fade:!0,trail:!0})}update(e){this.screenShake.duration>0&&(this.screenShake.duration-=e,this.screenShake.duration<=0?this.screenShake.offset={x:0,y:0}:this.screenShake.offset={x:(Math.random()-.5)*this.screenShake.intensity,y:(Math.random()-.5)*this.screenShake.intensity});for(let t=this.flashes.length-1;t>=0;t--)this.flashes[t].duration-=e,this.flashes[t].duration<=0&&this.flashes.splice(t,1);for(let t=this.particles.length-1;t>=0;t--){const s=this.particles[t];s.x+=s.vx*e,s.y+=s.vy*e,s.life-=e,s.gravity&&(s.vy+=s.gravity*e),s.vx*=.98,s.gravity||(s.vy*=.98),s.life<=0&&this.particles.splice(t,1)}for(let t=this.floatingTexts.length-1;t>=0;t--){const s=this.floatingTexts[t];s.y+=s.vy*e,s.life-=e,s.life<=0&&this.floatingTexts.splice(t,1)}}applyScreenShake(e){this.screenShake.duration>0&&(e.save(),e.translate(this.screenShake.offset.x,this.screenShake.offset.y))}restoreScreenShake(e){this.screenShake.duration>0&&e.restore()}renderParticles(e){for(const t of this.particles){const s=t.life/t.maxLife;e.save(),e.globalAlpha=s,t.segment?(e.strokeStyle=t.color,e.lineWidth=t.size,e.lineCap="round",e.beginPath(),e.moveTo(t.segment.x1,t.segment.y1),e.lineTo(t.segment.x2,t.segment.y2),e.stroke()):t.glow?(e.fillStyle=t.color,e.shadowBlur=t.size,e.shadowColor=t.color,e.beginPath(),e.arc(t.x,t.y,t.size/2,0,Math.PI*2),e.fill()):(e.fillStyle=t.color,e.fillRect(t.x-t.size/2,t.y-t.size/2,t.size,t.size)),e.restore()}}renderFloatingTexts(e){e.textAlign="center";for(const t of this.floatingTexts){const s=t.life;e.save(),e.globalAlpha=s*.7,e.fillStyle=t.color,e.font=t.size?`bold ${t.size}px monospace`:"bold 16px monospace",e.fillText(t.text,t.x,t.y),e.restore()}}renderFlashes(e){for(const t of this.flashes){const s=t.duration/t.maxDuration*.3;e.save(),e.globalAlpha=s,e.fillStyle=t.color,e.fillRect(0,0,this.canvas.width,this.canvas.height),e.restore()}}}class be{constructor(){this.enabled=!0,this.volume=.3,this.audioContext=null,this.sounds={},this.initialized=!1}async init(){if(!this.initialized)try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.initialized=!0,this.createSounds()}catch(e){console.warn("Audio not available:",e),this.enabled=!1}}createSounds(){this.sounds={shoot:()=>this.playShootSound(),shootPistol:()=>this.playTone(250,.05,"square",.08),shootShotgun:()=>this.playBurst(150,.15,"sawtooth",.3),shootSMG:()=>this.playTone(350,.02,"square",.05),shootRocket:()=>this.playExplosion(80,.3,.4),shootLaser:()=>this.playTone(1200,.03,"sine",.05),shootRicochet:()=>this.playTone(500,.08,"triangle",.15),shootWave:()=>this.playTone(400,.1,"sine",.12),shootBurst:()=>this.playTone(450,.04,"square",.1),shootOrbital:()=>{this.playExplosion(60,.3,.25),this.playTone(100,.2,"sawtooth",.2)},shootNova:()=>{this.playTone(800,.15,"sine",.2),this.playTone(600,.2,"triangle",.15),this.playNoise(.1,.1)},hit:()=>this.playTone(100,.1,"sawtooth",.2),critHit:()=>this.playArpeggio([100,200,400],.1),explosion:()=>this.playExplosion(50,.4,.5),enemyDeath:()=>this.playNoise(.1,.3),enemySpawn:()=>this.playTone(150,.1,"triangle",.1),pickup:()=>this.playTone(800,.1,"sine",.2),moneyPickup:()=>this.playArpeggio([600,800,1e3],.08),levelUp:()=>this.playArpeggio([400,500,600,800],.15),playerHurt:()=>this.playTone(50,.2,"sawtooth",.4),dodge:()=>this.playTone(1200,.05,"sine",.15),countdown:()=>this.playTone(880,.1,"sine",.3),countdownUrgent:()=>this.playTone(1320,.15,"square",.4),buttonClick:()=>this.playTone(600,.05,"sine",.1),purchaseSuccess:()=>this.playArpeggio([400,600,800],.1),purchaseFail:()=>this.playTone(200,.2,"sawtooth",.2),waveComplete:()=>this.playArpeggio([300,400,500,600,800],.2),bounce:()=>this.playTone(400,.03,"triangle",.05),reload:()=>this.playNoise(.05,.1)}}playShootSound(){const e=[()=>this.playTone(200+Math.random()*50,.05,"square",.1),()=>this.playTone(180+Math.random()*40,.04,"sawtooth",.08),()=>this.playTone(220+Math.random()*30,.06,"triangle",.09)];e[Math.floor(Math.random()*e.length)]()}playBurst(e,t,s,a){if(!(!this.enabled||!this.audioContext))for(let i=0;i<3;i++)setTimeout(()=>{this.playTone(e+i*20,t/3,s,a*(1-i*.2))},i*30)}playExplosion(e,t,s){!this.enabled||!this.audioContext||(this.playNoise(t,s),this.playTone(e,t*.5,"sawtooth",s*.5),setTimeout(()=>{this.playTone(e*.5,t*.3,"sine",s*.3)},50))}playTone(e,t,s="sine",a=null){if(!this.enabled||!this.audioContext)return;const i=this.audioContext.createOscillator(),o=this.audioContext.createGain();i.connect(o),o.connect(this.audioContext.destination),i.type=s,i.frequency.setValueAtTime(e,this.audioContext.currentTime);const n=(a??this.volume)*.5;o.gain.setValueAtTime(n,this.audioContext.currentTime),o.gain.exponentialRampToValueAtTime(.01,this.audioContext.currentTime+t),i.start(this.audioContext.currentTime),i.stop(this.audioContext.currentTime+t)}playNoise(e,t=null){if(!this.enabled||!this.audioContext)return;const s=this.audioContext.sampleRate*e,a=this.audioContext.createBuffer(1,s,this.audioContext.sampleRate),i=a.getChannelData(0);for(let r=0;r<s;r++)i[r]=Math.random()*2-1;const o=this.audioContext.createBufferSource(),n=this.audioContext.createGain(),h=this.audioContext.createBiquadFilter();o.buffer=a,o.connect(h),h.connect(n),n.connect(this.audioContext.destination),h.type="lowpass",h.frequency.setValueAtTime(1e3,this.audioContext.currentTime);const d=(t??this.volume)*.3;n.gain.setValueAtTime(d,this.audioContext.currentTime),n.gain.exponentialRampToValueAtTime(.01,this.audioContext.currentTime+e),o.start(this.audioContext.currentTime)}playArpeggio(e,t){if(!this.enabled||!this.audioContext)return;const s=t/e.length;e.forEach((a,i)=>{setTimeout(()=>{this.playTone(a,s*.9,"sine",this.volume*.5)},i*s*1e3)})}play(e){this.initialized?this.sounds[e]&&this.sounds[e]():this.init().then(()=>{this.sounds[e]&&this.sounds[e]()})}setVolume(e){this.volume=Math.max(0,Math.min(1,e))}toggle(){this.enabled=!this.enabled}}class ke{#a;#e;#y;#s;#t;#o;#h;#c;#g;#v;#i;#n;#u;#d;#l;#f;#m;#p;#r;constructor(e,t,s){this.#a=e,this.#e=t,this.#y=s,this.#s=new de,this.#o=[],this.#h=[],this.#c=[],this.#u=null,this.#d=0,this.#l=0,this.#m=0,this.#p=!1,this.#r=new Map,this.#i=new Se(e),this.#n=new be,this.menu=new pe(e,this.#s),this.characterScreen=new ue(e,this.#s),this.settingsScreen=new me(e,this.#s),this.shopScreen=new ge(e,this.#s,this.#n),this.upgradeScreen=new fe(e,this.#s,this.#n),this.gameOverScreen=new ye(e,this.#s),this.pauseMenu=new ve(e),this.activeScreen="menu",this.menu.onLevelSelect=a=>this.startLevel(a),this.menu.onCharacterClick=()=>this.showCharacterScreen(),this.menu.onShopClick=()=>this.showShop(),this.menu.onSettingsClick=()=>this.showSettings(),this.characterScreen.onBackClick=()=>this.showMenu(),this.settingsScreen.onBackClick=()=>this.showMenu(),this.shopScreen.onBackClick=()=>this.showMenu(),this.shopScreen.onContinueClick=()=>this.showMenu(),this.upgradeScreen.onUpgradeSelected=()=>this.showShopAfterWave(),this.gameOverScreen.onContinueClick=()=>this.showMenu(),this.pauseMenu.onResumeClick=()=>this.resumeGame(),this.pauseMenu.onMainMenuClick=()=>this.pauseToMenu(),this.setupMouseTracking(),this.showMenu(),window.debugGame=()=>(console.log("=== GAME DEBUG INFO ==="),console.log("Enemies:",this.#o.length),console.log("Projectiles:",this.#h.length),console.log("Game State:",this.#s.getState()),console.log("GAME_CONFIG.UI_BAR_HEIGHT:",g.UI_BAR_HEIGHT),console.log("GAME_CONFIG.ENEMY_SIZE:",g.ENEMY_SIZE),console.log("BALANCE.enemy.size:",p.enemy.size),this.#o.length>0&&console.log("Sample enemy:",this.#o[0]),"Debug info printed above")}updateContext(e){this.#e=e}setupMouseTracking(){this.#a.addEventListener("mousemove",e=>{const t=this.#a.getBoundingClientRect(),s=parseFloat(this.#a.dataset.scale||1);this.#u={x:(e.clientX-t.left)/s,y:(e.clientY-t.top)/s}}),this.#a.addEventListener("mouseleave",()=>{this.#u=null}),document.addEventListener("keydown",e=>{e.key==="Escape"&&this.#s.getState()===k.PLAYING&&!this.#p&&this.pauseGame()})}showMenu(){this.#s.setState(k.MENU),this.activeScreen="menu",this.#e.setTransform(1,0,0,1,0,0),this.menu.activate(),this.characterScreen.deactivate(),this.settingsScreen.deactivate(),this.shopScreen.deactivate(),this.#a.style.cursor="pointer"}showCharacterScreen(){this.#s.setState(k.MENU),this.activeScreen="character",this.menu.deactivate(),this.characterScreen.activate(),this.settingsScreen.deactivate(),this.shopScreen.deactivate()}showSettings(){this.#s.setState(k.MENU),this.activeScreen="settings",this.menu.deactivate(),this.characterScreen.deactivate(),this.settingsScreen.activate(),this.shopScreen.deactivate()}showShop(){this.#s.setState(k.MENU),this.activeScreen="shop",this.menu.deactivate(),this.characterScreen.deactivate(),this.settingsScreen.deactivate(),this.shopScreen.showContinueButton=!1,this.shopScreen.activate(),this.#a.style.cursor="pointer"}showShopAfterWave(){this.#s.setState(k.MENU),this.activeScreen="shop",this.upgradeScreen.deactivate(),this.shopScreen.showContinueButton=!0,this.shopScreen.activate(),this.#a.style.cursor="pointer"}pauseGame(){this.#s.getState()===k.PLAYING&&(this.#p=!0,this.#s.setState(k.PAUSED),this.pauseMenu.activate(),this.#a.style.cursor="pointer")}resumeGame(){this.#p=!1,this.#s.setState(k.PLAYING),this.pauseMenu.deactivate(),this.#a.style.cursor="crosshair"}pauseToMenu(){this.#p=!1,this.pauseMenu.deactivate(),this.showMenu()}startLevel(e){this.menu.deactivate(),this.characterScreen.deactivate(),this.settingsScreen.deactivate(),this.#a.style.cursor="crosshair",this.#r.clear(),this.#t=new K(g.CANVAS_WIDTH/2,g.UI_BAR_HEIGHT+g.GAME_AREA_HEIGHT/2),this.#t.health=this.#s.playerData.stats.health,this.#t.maxHealth=this.#s.playerData.stats.health,this.#t.speed=this.#s.playerData.stats.speed;const t=this.#s.playerData.items||[];this.#t.hasBounceHouse=t.includes("bounceHouse"),this.#t.bounceHouseStacks=this.#s.playerData.itemStacks?.bounceHouse||this.#s.playerData.bounceHouseStacks||0,this.#t.hasExplosiveRounds=t.includes("explosiveRounds"),this.#t.hasVampiric=t.includes("vampiric"),this.#t.hasLifeSteal=t.includes("lifeSteal"),this.#t.hasShieldGenerator=t.includes("shieldGenerator"),this.#t.hasAdrenalineRush=t.includes("adrenalineRush"),this.#t.hasDoubleTap=t.includes("doubleTap"),this.#t.hasBloodPact=t.includes("bloodPact"),this.#t.killCount=0,this.#g=new J(this.#i,this.#n);const s=this.#s.playerData.weapons||["pistol"],a=this.#s.playerData.weaponLevels||{pistol:1};for(const i of s){const o=a[i]||1,n=re(i,o);this.#g.addWeapon(n)}this.#t.stats=this.#s.playerData.stats,this.#v=new ce(e,this.#i),this.#o=[],this.#h=[],this.#c=[],this.#d=p.spawning.waveDuration,this.#l=0,this.#m=0,this.#f=Math.ceil(this.#d),this.#s.currentLevel=e,this.#s.setState(k.PLAYING)}update(e){if(this.#s.getState()!==k.PLAYING||this.#p)return;if(this.#i.update(e),this.#t.health<this.#t.maxHealth&&this.#s.playerData.stats.regeneration>0&&(this.#t.health=Math.min(this.#t.maxHealth,this.#t.health+this.#s.playerData.stats.regeneration*e)),this.#d-=e,this.#d<=0){this.completeRound();return}const t=Math.ceil(this.#d);t<=10&&t!==this.#f&&(this.#f=t,t<=3?this.#n.play("countdownUrgent"):this.#n.play("countdown")),this.#t.hasAdrenalineRush&&(this.#t.health/this.#t.maxHealth<=p.items.adrenalineRush.triggerHealthPercent?this.#t.adrenalineActive||(this.#t.adrenalineActive=!0,this.#t.baseSpeed=this.#t.speed,this.#t.speed*=1+p.items.adrenalineRush.statBoostPercent):this.#t.adrenalineActive&&(this.#t.adrenalineActive=!1,this.#t.speed=this.#t.baseSpeed)),this.#t.update(e,this.#y,this.#u,g.CANVAS_WIDTH,g.UI_BAR_HEIGHT+g.GAME_AREA_HEIGHT,g.UI_BAR_HEIGHT),this.#v.update(e,this.#o,g.CANVAS_WIDTH,g.UI_BAR_HEIGHT+g.GAME_AREA_HEIGHT,this.#t,this.#h),this.#g.update(e,this.#t,this.#o,this.#h,this.#r);for(let s=this.#o.length-1;s>=0;s--){const a=this.#o[s];if(a.update(e,g.CANVAS_WIDTH,g.UI_BAR_HEIGHT+g.GAME_AREA_HEIGHT,this.#t,this.#h,this.#o),a.checkCollision(this.#t)&&(Math.random()*100<this.#s.playerData.stats.dodge?this.#i.floatingTexts.push({x:this.#t.position.x,y:this.#t.position.y-20,text:"DODGE!",vy:-30,life:.5,color:"#00FFFF"}):this.#t.hasShieldGenerator&&Math.random()<p.items.shieldGenerator.blockChance/100?this.#i.floatingTexts.push({x:this.#t.position.x,y:this.#t.position.y-20,text:"BLOCKED!",vy:-30,life:.5,color:"#00AAFF"}):(this.#t.takeDamage(a.damage),this.#i.addDamageFlash(),this.#n.play("playerHurt")),a.alive=!1,!this.#t.alive)){this.gameOver();return}if(!a.alive){if(this.#i.addKillEffect(a.position.x,a.position.y),this.#n.play("enemyDeath"),this.#m++,this.#t.hasVampiric){this.#t.killCount++;const h=p.items.vampiric.healPerKills,d=p.items.vampiric.healAmount;this.#t.killCount>=h&&(this.#t.killCount=0,this.#t.health=Math.min(this.#t.maxHealth,this.#t.health+d),this.#i.floatingTexts.push({x:this.#t.position.x,y:this.#t.position.y-30,text:"+1 HP",vy:-30,life:1,color:"#FF00FF"}))}const i=Math.min((this.#s.currentLevel-1)*.01,a.moneyDropChance-.05),n=Math.max(.05,a.moneyDropChance-i)+this.#s.playerData.stats.luck*.01;if(Math.random()<n){const h=new U(a.position.x,a.position.y,"money"),d=a.moneyValue*(1+(a.wave-1)*.1);h.value=Math.floor(d*(1+this.#s.playerData.stats.luck*.02)),this.#c.push(h)}if(this.#t.hasBloodPact&&Math.random()<p.items.bloodPact.healthDropChance){const h=new U(a.position.x,a.position.y,"health");h.value=p.items.bloodPact.healthDropAmount,this.#c.push(h)}this.#o.splice(s,1)}}for(let s=this.#h.length-1;s>=0;s--){const a=this.#h[s];if(a.update(e,g.CANVAS_WIDTH,g.UI_BAR_HEIGHT+g.GAME_AREA_HEIGHT,this.#o),a.owner==="player"){for(const i of this.#o)if(!((a.piercing||a.boomerang)&&a.hitEnemies.has(i))&&i.alive&&a.checkCollision(i)){let o=a.damage;if(Math.random()*100<this.#s.playerData.stats.critChance?(o*=this.#s.playerData.stats.critDamage/100,this.#i.addCritEffect(i.position.x,i.position.y),this.#n.play("critHit")):this.#n.play("hit"),i.takeDamage(o),this.#i.addDamageNumber(i.position.x,i.position.y-10,o),this.#i.addImpactEffect(i.position.x,i.position.y),a.weaponId){const h=this.#r.get(a.weaponId)||0;this.#r.set(a.weaponId,h+o)}if(this.#t.hasLifeSteal){const h=o*p.items.lifeSteal.lifeStealPercent;h>.5&&(this.#t.health=Math.min(this.#t.maxHealth,this.#t.health+h))}if(a.explosive){this.#i.addExplosionEffect(a.position.x,a.position.y,a.explosionRadius),this.#n.play("explosion");for(const h of this.#o)if(h!==i&&h.alive){const d=h.position.x-a.position.x,r=h.position.y-a.position.y;if(Math.sqrt(d*d+r*r)<=a.explosionRadius&&(h.takeDamage(a.explosionDamage),this.#i.addDamageNumber(h.position.x,h.position.y-10,a.explosionDamage),a.weaponId)){const m=this.#r.get(a.weaponId)||0;this.#r.set(a.weaponId,m+a.explosionDamage)}}}if(a.piercing||a.boomerang)a.hitEnemies.add(i);else{a.alive=!1;break}}}else if(a.owner==="enemy"&&this.#t.alive&&a.checkCollision(this.#t)){if(Math.random()*100<this.#s.playerData.stats.dodge)this.#i.floatingTexts.push({x:this.#t.position.x,y:this.#t.position.y-20,text:"DODGE!",vy:-30,life:.5,color:"#00FFFF"});else if(this.#t.takeDamage(a.damage),this.#i.addDamageFlash(),this.#n.play("playerHurt"),!this.#t.alive){this.gameOver();return}a.alive=!1}a.trail&&a.alive&&this.#i.addProjectileTrail(a.position.x,a.position.y,"#666666",a.size/2),a.alive||this.#h.splice(s,1)}for(let s=this.#c.length-1;s>=0;s--){const a=this.#c[s];a.update(e);const i=a.position.x-this.#t.position.x,o=a.position.y-this.#t.position.y;(Math.sqrt(i*i+o*o)<=this.#s.playerData.stats.pickupRange||a.checkCollision(this.#t))&&(a.type==="money"?(this.#l+=a.value,this.#i.addMoneyPickupEffect(a.position.x,a.position.y,a.value),this.#n.play("pickup")):a.type==="health"&&(this.#t.health=Math.min(this.#t.maxHealth,this.#t.health+a.value),this.#i.floatingTexts.push({x:a.position.x,y:a.position.y-10,text:`+${a.value} HP`,vy:-30,life:1,color:"#00FF00"}),this.#n.play("heal")),a.alive=!1),a.alive||this.#c.splice(s,1)}}completeRound(){this.#s.completeLevel(this.#s.currentLevel,this.#l),this.#s.setState(k.ROUND_COMPLETE),this.#n.play("waveComplete"),setTimeout(()=>this.showUpgradeScreen(),2e3)}showUpgradeScreen(){this.#s.setState(k.MENU),this.activeScreen="upgrade",this.#i.screenShake.duration=0,this.#i.screenShake.intensity=0,this.#i.screenShake.offset={x:0,y:0},this.upgradeScreen.activate(),this.#a.style.cursor="pointer"}gameOver(){this.#s.setState(k.GAME_OVER),this.#s.resetProgress(),this.gameOverScreen.activate({wave:this.#s.currentLevel,money:this.#l,kills:this.#m}),this.activeScreen="gameOver",this.#a.style.cursor="pointer"}render(){const e=this.#s.getState();if(e===k.MENU||e===k.GAME_OVER){switch(this.activeScreen){case"character":this.characterScreen.render(this.#e);break;case"settings":this.settingsScreen.render(this.#e);break;case"shop":this.shopScreen.render(this.#e);break;case"upgrade":this.renderGameState(),this.upgradeScreen.render(this.#e);break;case"gameOver":this.gameOverScreen.render(this.#e);break;case"menu":default:this.menu.render(this.#e);break}return}if(e===k.PAUSED){this.renderGame(),this.pauseMenu.render(this.#e);return}this.#i.applyScreenShake(this.#e),this.#e.fillStyle=c.BACKGROUND,this.#e.fillRect(0,0,g.CANVAS_WIDTH,g.CANVAS_HEIGHT),this.#e.fillStyle=c.UI_BACKGROUND,this.#e.fillRect(0,0,g.CANVAS_WIDTH,g.UI_BAR_HEIGHT),this.#e.strokeStyle=c.UI_BORDER,this.#e.lineWidth=2,this.#e.beginPath(),this.#e.moveTo(0,g.UI_BAR_HEIGHT),this.#e.lineTo(g.CANVAS_WIDTH,g.UI_BAR_HEIGHT),this.#e.stroke(),this.drawGrid(),e===k.PLAYING?this.renderGame():this.#s.getState()===k.ROUND_COMPLETE?this.renderRoundComplete():this.#s.getState()===k.GAME_OVER&&this.renderGameOver(),this.#i.restoreScreenShake(this.#e)}drawGrid(){this.#e.strokeStyle=c.GRID,this.#e.lineWidth=1;const e=50;for(let t=0;t<=g.CANVAS_WIDTH;t+=e)this.#e.beginPath(),this.#e.moveTo(t,g.UI_BAR_HEIGHT),this.#e.lineTo(t,g.CANVAS_HEIGHT),this.#e.stroke();for(let t=g.UI_BAR_HEIGHT;t<=g.CANVAS_HEIGHT;t+=e)this.#e.beginPath(),this.#e.moveTo(0,t),this.#e.lineTo(g.CANVAS_WIDTH,t),this.#e.stroke()}renderUI(){this.#e.fillStyle=c.UI_TEXT,this.#e.font="bold 16px monospace",this.#e.textAlign="left";const t=20;this.#e.font="14px monospace",this.#e.fillText("HP",20,t+7);const s=45,a=145,i=12,o=this.#t.health/this.#t.maxHealth;if(this.#e.strokeStyle=c.UI_INACTIVE,this.#e.strokeRect(s,t,a,i),this.#e.fillStyle="#330000",this.#e.fillRect(s,t,a,i),this.#e.fillStyle=o>.3?"#00FF00":"#FF0000",this.#e.fillRect(s,t,a*o,i),this.#e.font="10px monospace",this.#e.fillStyle="#FFFFFF",this.#e.textAlign="center",this.#e.fillText(`${Math.ceil(this.#t.health)}/${this.#t.maxHealth}`,s+a/2,t+9),this.#e.font="14px monospace",this.#e.fillStyle=c.UI_TEXT,this.#e.textAlign="left",this.#e.fillText(`$${this.#s.playerData.money+this.#l}`,20,t+35),this.#e.font="10px monospace",this.#e.fillStyle="#FFFF00",this.#l>0&&this.#e.fillText(`+${this.#l}`,100,t+35),this.#r.size>0){this.#e.font="9px monospace",this.#e.fillStyle="#FF8800",this.#e.textAlign="left";const O=Array.from(this.#r.entries()).sort((A,x)=>x[1]-A[1]).slice(0,3);let H="DMG: ";for(const[A,x]of O){const V=(p.weapons[A]?.name||A).split(" ")[0].substring(0,4).toUpperCase();H+=`${V}:${x.toFixed(0)} `}this.#e.fillText(H.trim(),20,t+50)}this.#e.fillStyle=c.UI_TEXT,this.#e.font="bold 20px monospace",this.#e.textAlign="center",this.#e.fillText(`STAGE ${this.#s.currentLevel}`,g.CANVAS_WIDTH/2,25);const n=Math.ceil(this.#d);this.#e.font="bold 32px monospace",this.#e.fillStyle=n<=10?"#FF0000":c.UI_TEXT,this.#e.fillText(`${n}`,g.CANVAS_WIDTH/2,60),this.#e.font="12px monospace",this.#e.fillText("seconds",g.CANVAS_WIDTH/2,75),this.#e.textAlign="right",this.#e.font="12px monospace",this.#e.fillStyle=c.UI_TEXT;const h=g.CANVAS_WIDTH-20;this.#e.fillText(`Enemies: ${this.#o.length}`,h,20);const d=(this.#s.playerData.weapons||["pistol"]).length,r=(this.#s.playerData.items||[]).length;this.#e.fillText(`Weapons: ${d} | Items: ${r}`,h,40),this.#e.font="9px monospace",this.#e.fillStyle="#00FF00";const l=this.#s.playerData.stats,m=l.damage,u=l.fireRate.toFixed(1),v=`${l.critChance.toFixed(0)}%`,f=`${l.critDamage.toFixed(0)}%`,S=l.speed,b=`${l.dodge.toFixed(0)}%`,w=l.luck.toFixed(1),T=(l.armor||0).toFixed(0),Y=(l.regeneration*10).toFixed(1),N=l.pickupRange;this.#e.fillText(`DMG:${m} FIRE:${u}x CRIT:${v}/${f}`,h,55),this.#e.fillText(`SPD:${S} DODGE:${b} LUCK:${w}`,h,67),this.#e.fillText(`ARM:${T} REGEN:${Y}/s RNG:${N}`,h,79)}renderRoundComplete(){this.#e.fillStyle=c.UI_TEXT,this.#e.font="32px monospace",this.#e.textAlign="center";const e=g.UI_BAR_HEIGHT+g.GAME_AREA_HEIGHT/2;this.#e.fillText("ROUND COMPLETE!",g.CANVAS_WIDTH/2,e-40),this.#e.font="20px monospace",this.#e.fillText(`Money Earned: $${this.#l}`,g.CANVAS_WIDTH/2,e+10)}renderGameOver(){this.#e.fillStyle="#FF0000",this.#e.font="48px monospace",this.#e.textAlign="center";const e=g.UI_BAR_HEIGHT+g.GAME_AREA_HEIGHT/2;this.#e.fillText("GAME OVER",g.CANVAS_WIDTH/2,e),this.#e.fillStyle=c.UI_TEXT,this.#e.font="20px monospace",this.#e.fillText("Restarting...",g.CANVAS_WIDTH/2,e+40)}renderGame(){this.#e.fillStyle=c.BACKGROUND,this.#e.fillRect(0,0,g.CANVAS_WIDTH,g.CANVAS_HEIGHT),this.#e.fillStyle=c.UI_BACKGROUND,this.#e.fillRect(0,0,g.CANVAS_WIDTH,g.UI_BAR_HEIGHT),this.#e.strokeStyle=c.UI_BORDER,this.#e.lineWidth=2,this.#e.beginPath(),this.#e.moveTo(0,g.UI_BAR_HEIGHT),this.#e.lineTo(g.CANVAS_WIDTH,g.UI_BAR_HEIGHT),this.#e.stroke(),this.drawGrid();for(const e of this.#c)e.render(this.#e);for(const e of this.#o)e.render(this.#e);for(const e of this.#h)e.render(this.#e);this.#t&&this.#t.render(this.#e),this.#i.renderParticles(this.#e),this.#i.renderFloatingTexts(this.#e),this.#t&&this.renderUI(),this.#i.renderFlashes(this.#e)}renderGameState(){this.#e.fillStyle=c.BACKGROUND,this.#e.fillRect(0,0,g.CANVAS_WIDTH,g.CANVAS_HEIGHT),this.#e.fillStyle=c.UI_BACKGROUND,this.#e.fillRect(0,0,g.CANVAS_WIDTH,g.UI_BAR_HEIGHT),this.#e.strokeStyle=c.UI_BORDER,this.#e.lineWidth=2,this.#e.beginPath(),this.#e.moveTo(0,g.UI_BAR_HEIGHT),this.#e.lineTo(g.CANVAS_WIDTH,g.UI_BAR_HEIGHT),this.#e.stroke(),this.drawGrid(),this.#t&&this.renderUI()}}console.log("main.js loaded");const R=document.getElementById("game");if(!R)throw new Error('No <canvas id="game"> found');let B=W(R);const we=new G,P=new ke(R,B.ctx,we);let L=performance.now();function z(y){let e=(y-L)/1e3;L=y,e=Math.min(e,1/15),P.update(e),P.render(),requestAnimationFrame(z)}requestAnimationFrame(z);let _;window.addEventListener("resize",()=>{clearTimeout(_),_=setTimeout(()=>{B=W(R),P.updateContext(B.ctx)},250)});
